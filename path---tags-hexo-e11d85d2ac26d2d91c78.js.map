{"version":3,"sources":["webpack:///path---tags-hexo-e11d85d2ac26d2d91c78.js","webpack:///./.cache/json/tags-hexo.json"],"names":["webpackJsonp","413","module","exports","data","allMarkdownRemark","edges","node","id","html","fields","slug","frontmatter","title","date","tags","pathContext","tag"],"mappings":"AAAAA,cAAc,eAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,GAAA,0HAAAC,KAAA;AAA66lCC,QAA+mDC,KAAA,gCAAsCC,aAAgBC,MAAA,kBAAAC,KAAA,eAAAC,MAAA,qBAA6ER,MAAQC,GAAA,qHAAAC,KAAA,07GAAsuDC,QAAi9DC,KAAA,2BAAiCC,aAAgBC,MAAA,aAAAC,KAAA,eAAAC,MAAA,kBAAqER,MAAQC,GAAA,8HAAAC,KAAA,+vJAAo8JC,QAA6FC,KAAA,oCAA0CC,aAAgBC,MAAA,sBAAAC,KAAA,eAAAC,MAAA,oBAAgFR,MAAQC,GAAA,6HAAAC,KAAA,w/GAAAC,QAA6vHC,KAAA,mCAAyCC,aAAgBC,MAAA,qBAAAC,KAAA,eAAAC,MAAA,uCAAkGR,MAAQC,GAAA,uHAAAC,KAAA,0gKAAy7HC,QAAg3CC,KAAA,6BAAmCC,aAAgBC,MAAA,eAAAC,KAAA,eAAAC,MAAA,8BAAkFC,aAAgBC,IAAA","file":"path---tags-hexo-e11d85d2ac26d2d91c78.js","sourcesContent":["webpackJsonp([261373376314],{\n\n/***/ 413:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2018-06-08-從-Hexo-到-Gatsby.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>本篇文章記錄了我將部落格從 Hexo 轉換到 Gatsby 的過程，以及這過程當中相關設定的經驗分享。</p>\\n<p><img src=\\\"https://i.imgur.com/yGnymMq.png\\\" alt=\\\"From Hexo to Gatsby\\\"></p>\\n<!-- more -->\\n<p>本篇文章並非詳細介紹 Gatsby，如想了解更多，請至<a href=\\\"https://www.gatsbyjs.org/\\\">官方網站</a>。</p>\\n<h2 id=\\\"緣由\\\"><a href=\\\"#%E7%B7%A3%E7%94%B1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>緣由</h2>\\n<p>Hexo 是一套歷史已久的 static site generator，此部落格原本就是利用 Hexo 架起來的。然而，後起之秀 Gatsby 採用著不同的資料流處理方式，加上優異的架構，最重要的是該團隊獲得資金並成立公司的<a href=\\\"https://twitter.com/gatsbyjs/status/999684072501792768\\\">新聞</a>一出，我對於這個專案後續維護更加看好，就決定搬家到 Gatsby。</p>\\n<h2 id=\\\"搬移過程\\\"><a href=\\\"#%E6%90%AC%E7%A7%BB%E9%81%8E%E7%A8%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>搬移過程</h2>\\n<p>此處列出一些在搬部落格過程中需要注意的點，並作大綱的列點，可以選擇自己喜歡的部份研究。</p>\\n<ul>\\n<li><a href=\\\"#markdown-%E6%95%B4%E7%90%86\\\">Markdown 整理</a></li>\\n<li><a href=\\\"#url-%E4%B8%80%E8%87%B4%E6%80%A7\\\">URL 一致性</a></li>\\n<li><a href=\\\"#page-%E8%A8%AD%E8%A8%88\\\">Page 設計</a></li>\\n<li><a href=\\\"#favicon\\\">Favicon</a></li>\\n<li><a href=\\\"#gatsby-plugins--useful-packages\\\">Gatsby plugin &#x26; useful packages</a></li>\\n</ul>\\n<h2 id=\\\"markdown-整理\\\"><a href=\\\"#markdown-%E6%95%B4%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Markdown 整理</h2>\\n<p>Hexo 原生就提供產生文章的 CLI API，因此使用上蠻方便，只要一個指令就可以自動產生 Markdown 檔。而 Gatsby 就得要自行選擇文檔的類型，因為當初選用 Hexo 就是它可以利用 Markdown 寫部落格，所以轉換到 Gatsby 自然就沿用 Markdown 了。</p>\\n<h3 id=\\\"gatsby-source-filesystem\\\"><a href=\\\"#gatsby-source-filesystem\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gatsby-source-filesystem</h3>\\n<p>在部落格架構設計上，我把所有原始檔放在 <code class=\\\"language-text\\\">./content/_posts</code> 底下。但想讓 Gatsby 知道文件位置，就得利用 <code class=\\\"language-text\\\">gatsby-source-filesystem</code> 這個 plugin，如下設定：</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-config.js</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'gatsby-source-filesystem'</span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'posts'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// Name this source</span>\\n      path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./content/_posts'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>ps. Gatsby 的範例都利用 <code class=\\\"language-text\\\">``(backtick)</code> 包住字串，但我還是習慣使用 single quote。</p>\\n<h3 id=\\\"gatsby-transformer-remark\\\"><a href=\\\"#gatsby-transformer-remark\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gatsby-transformer-remark</h3>\\n<p>把原始 file 讀進來之後，Gatsby 也提供了專為 Markdown 檔處理的 plugin，名為 <code class=\\\"language-text\\\">gatsby-transformer-remark</code>。<br>\\n經過這個 plugin 處理過的資料，會被轉成 Gatsby 架構下的 <code class=\\\"language-text\\\">node</code>，此 node 的 type 為 <code class=\\\"language-text\\\">MarkdownRemark</code>，該 node 會增加許多有用資訊，例如：<code class=\\\"language-text\\\">html</code>, <code class=\\\"language-text\\\">headings</code>, <code class=\\\"language-text\\\">excerpt</code> 等等，省下許多 parse Markdown 檔的功夫。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-config.js</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'gatsby-transformer-remark'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>後續還會介紹更多這個 plugin 的設定方式，也可直接參考 <a href=\\\"https://github.com/kpman/kpman.github.com/blob/0f02b98eaa23e92f794adf4a14bfda4c1ec3be0d/gatsby-config.js#L24-L42\\\">repo</a></p>\\n<h2 id=\\\"url-一致性\\\"><a href=\\\"#url-%E4%B8%80%E8%87%B4%E6%80%A7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>URL 一致性</h2>\\n<p>當初利用 Hexo 建立出來的 URL 為類似 <code class=\\\"language-text\\\">/2017/07/03/利用-Hub-來自動發-GitHub-PR/</code> 這樣的 pattern，\\n為了不 breaking 既有 URL，我選擇將新版的 URL 設計和當初一樣。</p>\\n<p>此時就得讓 Gatsby 讀懂日期，這邊當初猶豫是要從 Markdown 裡面拿或者是從檔名拿日期。\\n將日期寫在檔名有多一個好處，就是可以利用檔名來做排序，基於這樣就決定將原本的所有 Markdown 檔都加上日期，修改過後的檔名為 <code class=\\\"language-text\\\">2017-07-03-利用-Hub-來自動發-GitHub-PR.md</code>。</p>\\n<h3 id=\\\"oncreatenode\\\"><a href=\\\"#oncreatenode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>onCreateNode</h3>\\n<p>Gatsby 提供 <code class=\\\"language-text\\\">onCreateNode</code> 此 API 操作，原理上是在 Gatsby 要 createNode 時，在該 node 上面加上一些我們用的到的資訊。\\n我在此處便是利用 RegExp 將檔名給 parse 出來，並在 node 上面新增一個 field 叫做 <code class=\\\"language-text\\\">slug</code>，也就是 URL 上面除了 domain 後面的 <a href=\\\"https://nodejs.org/api/url.html\\\"><code class=\\\"language-text\\\">pathname</code></a> 部分。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-node.js</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">BLOG_POST_FILENAME_REGEX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token regex\\\">/([0-9]+)-([0-9]+)-([0-9]+)-(.+)\\\\.md$/</span><span class=\\\"token punctuation\\\">;</span>\\n\\nexports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onCreateNode</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node<span class=\\\"token punctuation\\\">,</span> getNode<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createNodeField <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// 確定是 Markdown 檔再做操作</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>internal<span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'MarkdownRemark'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> relativePath <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getNode</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">BLOG_POST_FILENAME_REGEX</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">exec</span><span class=\\\"token punctuation\\\">(</span>relativePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> year <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> month <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> day <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> filename <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// 組出我們要的 slug pattern</span>\\n    <span class=\\\"token keyword\\\">const</span> slug <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>year<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>month<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>day<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>filename<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// 在該 node 上面多增加一個欄位，未來可以 Query</span>\\n    <span class=\\\"token function\\\">createNodeField</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token punctuation\\\">,</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'slug'</span><span class=\\\"token punctuation\\\">,</span>\\n      value<span class=\\\"token punctuation\\\">:</span> slug<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>有了前述的 node 資料之後，我們在 Gatsby 創造這些 page，讓使用者在進入 <code class=\\\"language-text\\\">/YYYY/MM/DD/&lt;blog-title&gt;/</code> 這樣的 URL 可以順利取得文章內容。</p>\\n<h3 id=\\\"createpages\\\"><a href=\\\"#createpages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>createPages</h3>\\n<p>Gatsby 提供的另一個 API 叫做 <code class=\\\"language-text\\\">createPages</code>，此 API 就是你所有的 page 都需要透過該 API 來創造，如此一來 Gatsby 才可以正確的回傳該頁面。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-node.js</span>\\nexports<span class=\\\"token punctuation\\\">.</span>createPages <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createPage <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> allMarkdown <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n    {\\n      allMarkdownRemark {\\n        edges {\\n          node {\\n            fields {\\n              slug # 此處的 slug 就是上述 onCreateNode 時候加上去的\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  allMarkdown<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allMarkdownRemark<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> slug <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>fields<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token punctuation\\\">:</span> slug<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 告訴 Gatsby 這個 URL path</span>\\n      <span class=\\\"token comment\\\">// 這邊選用的 component，就可以在 pageQuery 使用 context 所傳進去的 slug</span>\\n      component<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./src/templates/post.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      layout<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'index'</span><span class=\\\"token punctuation\\\">,</span>\\n      context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Data passed to context is available in page queries as GraphQL variables.</span>\\n        slug<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>-</p>\\n<h2 id=\\\"page-設計\\\"><a href=\\\"#page-%E8%A8%AD%E8%A8%88\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Page 設計</h2>\\n<p>在 Gatsby 的架構內，每一個需要不同 URL 的頁面都需要自己創造一個 page，例如：首頁、每一篇文章、archive 頁面等等，底下列出此部落格需要的 URL：</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">/</code>: index page</li>\\n<li><code class=\\\"language-text\\\">/YYYY/MM/DD/&lt;blog-title&gt;/</code>: article page</li>\\n<li><code class=\\\"language-text\\\">/archives</code>: archives page</li>\\n<li><code class=\\\"language-text\\\">/tags/&lt;tag&gt;</code>: tags page</li>\\n</ul>\\n<h3 id=\\\"index-page\\\"><a href=\\\"#index-page\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>index page</h3>\\n<p>因為 Gatsby 底下會自動的把 <code class=\\\"language-text\\\">./src/pages/*.js</code> 自動 create page，所以我們在設計首頁的時候，就是去修改 <code class=\\\"language-text\\\">./src/pages/index.js</code> 此頁即可。</p>\\n<p>該頁最主要就是把所有的文章時間、title 等資料拿出來，GraphQL 的 query 如下：</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\">\\n      <pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\">// src/pages/index.js\\nexport const pageQuery <span class=\\\"token operator\\\">=</span> graphql`\\n  <span class=\\\"token keyword\\\">query</span> BlogIndexQuery <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\"># query 依照 date 排序</span>\\n    allMarkdownRemark<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">sort</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">fields</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>frontmatter___date<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">order</span><span class=\\\"token punctuation\\\">:</span> DESC <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      edges <span class=\\\"token punctuation\\\">{</span>\\n        node <span class=\\\"token punctuation\\\">{</span>\\n          fields <span class=\\\"token punctuation\\\">{</span>\\n            slug\\n          <span class=\\\"token punctuation\\\">}</span>\\n          html <span class=\\\"token comment\\\"># 需要把 html 拿回來 render</span>\\n          frontmatter <span class=\\\"token punctuation\\\">{</span>\\n            title\\n            <span class=\\\"token comment\\\"># 可以在此處就把 date format 成我們要的格式</span>\\n            date<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">formatString</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"MMM DD, YYYY\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n            tags\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n`;</code></pre>\\n      </div>\\n<p>上述的 <code class=\\\"language-text\\\">html</code> 也可以用 <code class=\\\"language-text\\\">excerpt</code> 去拿，但我選擇拿 html 再選擇我要的顯示在首頁部分內容。</p>\\n<h3 id=\\\"archives-page\\\"><a href=\\\"#archives-page\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>archives page</h3>\\n<p>該頁面與 index page 大同小異，該 page 位於 <code class=\\\"language-text\\\">./src/pages/archives.js</code>，唯一不同的是因為 archives page 有一種整理的效果，因此我們只要拿 title、date、tags 即可。</p>\\n<h3 id=\\\"tags-page\\\"><a href=\\\"#tags-page\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>tags page</h3>\\n<p>tags page 顧名思義就是每篇文章我會給一些 tag，寫在 Markdown 最上方，所以可以利用套件幫我們產生的 frontmatter 拿到每一篇的 tags 資料，但要怎樣擁有不同頁的 tag 呢？</p>\\n<p>此時就必須在 createPage 的時候就將所有的 tag 拿出來，然後產生每一個 tag 的 page。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">//</span>\\nexports<span class=\\\"token punctuation\\\">.</span>createPages <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createPage <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> allMarkdown <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n    {\\n      allMarkdownRemark {\\n        edges {\\n          node {\\n            frontmatter {\\n              tags\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  allMarkdown<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allMarkdownRemark<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> tags <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>frontmatter<span class=\\\"token punctuation\\\">;</span>\\n\\n    tags<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>tag <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/tags/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 此處創造 tag URL</span>\\n        component<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./src/templates/tags.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 選擇用 tags template</span>\\n        layout<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'index'</span><span class=\\\"token punctuation\\\">,</span>\\n        context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n          tag<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 傳進去讓 tags template 的 pageQuery 可以使用該 tag 去 query</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>創造完每一頁 tag 的 page 之後，我們來看看 tags template 應該怎樣寫。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\">\\n      <pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\">// ./src/templates/tags.js\\nexport const pageQuery <span class=\\\"token operator\\\">=</span> graphql`\\n  <span class=\\\"token keyword\\\">query</span> PostByTag<span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$tag</span><span class=\\\"token punctuation\\\">:</span> String<span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    allMarkdownRemark<span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token attr-name\\\">filter</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">frontmatter</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">tags</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">in</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token variable\\\">$tag</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token attr-name\\\">sort</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">fields</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>frontmatter___date<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">order</span><span class=\\\"token punctuation\\\">:</span> DESC <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      edges <span class=\\\"token punctuation\\\">{</span>\\n        node <span class=\\\"token punctuation\\\">{</span>\\n          id\\n          html\\n          fields <span class=\\\"token punctuation\\\">{</span>\\n            slug\\n          <span class=\\\"token punctuation\\\">}</span>\\n          frontmatter <span class=\\\"token punctuation\\\">{</span>\\n            title\\n            date<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">formatString</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"MMM DD, YYYY\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n            tags\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n`;</code></pre>\\n      </div>\\n<p>最關鍵的就是 Query 的參數了，利用 createPage 傳進來的 <code class=\\\"language-text\\\">$tag</code>，我們在 <code class=\\\"language-text\\\">allMarkdownRemark</code> 的參數就利用到了 <code class=\\\"language-text\\\">filter</code>、<code class=\\\"language-text\\\">sort</code> 等使用情境，拿回所有擁有這個 tag 的文章資料再去做 render。</p>\\n<h2 id=\\\"favicon\\\"><a href=\\\"#favicon\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Favicon</h2>\\n<p>當初設定 Favicon 也遇到一些問題，本來以為放在 <code class=\\\"language-text\\\">/static/favicon.ico</code> 就可以讓瀏覽器抓到，可是怎麼嘗試都不成功。\\n後來請教同事 <a href=\\\"https://github.com/jigsawye\\\">@jigsawye</a> 才發現原來是要利用 loader，也就是直接將 favicon file 給 <code class=\\\"language-text\\\">import</code> 到環境內，再利用 <code class=\\\"language-text\\\">react-helmet</code> 做操作。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// ./src/layouts/Head.js</span>\\n<span class=\\\"token keyword\\\">import</span> Helmet <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-helmet'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> Favicon <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../assets/favicon.png'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Head</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>Helmet<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>link rel<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"icon\\\"</span> type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"image/png\\\"</span> sizes<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"30x30\\\"</span> href<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>Favicon<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Helmet<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> Head<span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>-</p>\\n<h2 id=\\\"gatsby-plugins--useful-packages\\\"><a href=\\\"#gatsby-plugins--useful-packages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby plugins &#x26; useful packages</h2>\\n<p>推薦幾個在架設這個部落格用到的 Gatsby plugin</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-react-next</code>: v1 還是內建 react v15，所以需要裝這套</li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-react-helmet</code>: 操作該頁面的 HTML meta 資料</li>\\n<li><code class=\\\"language-text\\\">gatsby-remark-prismjs</code>: 可以將 Markdown 內的程式碼做上色</li>\\n<li><code class=\\\"language-text\\\">gatsby-remark-autolink-headers</code>: 可以讓 Markdown 的 Heading 都自動加上 id，瀏覽更方便</li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-sitemap</code>：自動產生 Sitemap</li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-feed</code>：自動產生 RSS feed，production 才會輸出，輸出檔名為 <code class=\\\"language-text\\\">/rss.xml</code></li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-google-analytics</code>: 可以載入 GA 使用</li>\\n<li><code class=\\\"language-text\\\">disqus-react</code>: Disqus 官方的 React 套件</li>\\n</ul>\\n<h2 id=\\\"結論\\\"><a href=\\\"#%E7%B5%90%E8%AB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>結論</h2>\\n<p>這次的搬家花了不少心力，其中最多的時間其實是在重新架構整個 layout，而搬家過後因為 client side render，整體速度提昇不少，也對於 Gatsby 的生態圈蠻看好，希望可以持續發展。</p>\\n<p>雖然現在市面上有很多撰寫文章的平台（例如：Medium），不過這種一手打造的部落格，擁有自己 content 的感覺，或許就是工程師的浪漫吧。</p>\",\"fields\":{\"slug\":\"/2018/06/08/從-Hexo-到-Gatsby/\"},\"frontmatter\":{\"title\":\"從 Hexo 到 Gatsby\",\"date\":\"Jun 08, 2018\",\"tags\":[\"hexo\",\"gatsby\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-05-08-在hexo自訂rss.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>趁著好朋友在旁邊的情況下，請教他學會了在 hexo 自訂 rss，再次感受到技術這種東西，真的是當面交流才會發揮他的效益。</p>\\n<!-- more -->\\n<h3 id=\\\"一、本機環境\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E6%9C%AC%E6%A9%9F%E7%92%B0%E5%A2%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、本機環境</h3>\\n<p>在終端機下輸入以下</p>\\n<p>{% codeblock %}\\nnpm install hexo-generator-feed --save\\n{% endcodeblock %}</p>\\n<p>權限沒有取得的記得前面加上<code class=\\\"language-text\\\">sudo</code>。</p>\\n<h3 id=\\\"二、修改_configyml\\\"><a href=\\\"#%E4%BA%8C%E3%80%81%E4%BF%AE%E6%94%B9_configyml\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、修改_config.yml</h3>\\n<p>在主目錄底下的<code class=\\\"language-text\\\">_config.yml</code>檔加上</p>\\n<p>{% codeblock %}\\nplugins:</p>\\n<ul>\\n<li>hexo-generator-feed\\n{% endcodeblock %}</li>\\n</ul>\\n<p><img src=\\\"https://i.imgur.com/w39zkK6.png\\\" alt=\\\"modify _config.yml\\\" title=\\\"modify _config.yml\\\"></p>\\n<p>如此一來便完成了環境設置。</p>\\n<h3 id=\\\"三、要怎樣找到？\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E8%A6%81%E6%80%8E%E6%A8%A3%E6%89%BE%E5%88%B0%EF%BC%9F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、要怎樣找到？</h3>\\n<p>在 hexo generate 之後，會發現 public 資料夾底下多了 atom.xml<br>\\n在<a href=\\\"http://www.feedly.com/\\\">feedly</a>這類的閱讀收集器<br>\\n只要輸入<code class=\\\"language-text\\\">domain/atom</code>就可以找到<br>\\n例如要訂閱我的 blog 只要輸入<code class=\\\"language-text\\\">code.kpman.cc/atom</code>就可以搜尋到囉！</p>\\n<p><img src=\\\"https://i.imgur.com/Hk12y1N.png\\\" alt=\\\"rss\\\" title=\\\"feedly rss search\\\"></p>\\n<p>突然發現我的 blog 只有一個人訂閱，那個人就是我自己...</p>\\n<h3 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><em>reference</em></h3>\\n<ol>\\n<li><a href=\\\"https://github.com/tommy351/hexo/wiki/Plugins\\\">hexo plugins</a></li>\\n<li><a href=\\\"http://michaelhsu.tw/2013/05/05/rssatom-sitemap-for-seo/\\\">RSS/Atom、Sitemap for SEO</a></li>\\n</ol>\\n<p>感謝強者阿志耐心面授機宜:)</p>\",\"fields\":{\"slug\":\"/2013/05/08/在hexo自訂rss/\"},\"frontmatter\":{\"title\":\"在hexo自訂rss\",\"date\":\"May 08, 2013\",\"tags\":[\"rss\",\"hexo\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-04-28-客製化hexo-light-theme.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>分享一些目前知道的客製化 theme 技巧。<br>\\n其實非常簡單，但是這些技巧如果沒有問過或是自己看過文件，<br>\\n一時間也無法摸透，所以覺得應該值得把它記錄下來。</p>\\n<!-- more -->\\n<h3 id=\\\"一、增加-disqus-留言板\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E5%A2%9E%E5%8A%A0-disqus-%E7%95%99%E8%A8%80%E6%9D%BF\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、增加 Disqus 留言板</h3>\\n<ul>\\n<li>到<a href=\\\"http://disqus.com/\\\">Disqus</a>申請帳號</li>\\n<li>右上角的 Dashboard <code class=\\\"language-text\\\">+Add</code> 申請一個新的帳號</li>\\n<li>將網址、name、shortname 打好後，要把 <code class=\\\"language-text\\\">shortname</code> 記住！\\n_ 修改本機目錄下的 <code class=\\\"language-text\\\">_confid.yml</code>\\n_ 在 <code class=\\\"language-text\\\">disqus_shortname</code> 貼上自己的 shortname</li>\\n</ul>\\n<p>完成～</p>\\n<p>※ 後記：<br>\\n若你在申請完 disqus 貼到自己的 blog 上面，發現出現很多不必要的連結，請到 disqus 的 dashboard 去修改。<br>\\n右上方 <code class=\\\"language-text\\\">Setting</code> -> <code class=\\\"language-text\\\">Discovery</code> -> 將 Discovery level 拉到最右邊，如下圖<br>\\n<img src=\\\"https://i.imgur.com/eeEjwka.png\\\" alt=\\\"Discovery level\\\"></p>\\n<h3 id=\\\"二、增加右方側欄-widget\\\"><a href=\\\"#%E4%BA%8C%E3%80%81%E5%A2%9E%E5%8A%A0%E5%8F%B3%E6%96%B9%E5%81%B4%E6%AC%84-widget\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、增加右方側欄 widget</h3>\\n<p>在標題就已經破梗囉 XD<br>\\n右方出現那些『Tag』『Tag Cloud』等欄位，其實就是修改 widget 過後得到的結果。<br>\\n方法如下：</p>\\n<ul>\\n<li>找到 <code class=\\\"language-text\\\">theme/light/layout/_widget</code> ，可以發現很多 <strong>ejs</strong> 檔</li>\\n<li>有些是已經自訂好了，例如 <code class=\\\"language-text\\\">category</code> <code class=\\\"language-text\\\">recent_posts</code> 等</li>\\n<li>在 <code class=\\\"language-text\\\">theme/light/_config.yml</code> 內，修改<strong>widgets</strong>，在底下新增你要的 ejs 檔名即可～</li>\\n</ul>\\n<p>同樣方法可以自己寫 ejs 檔，一樣在<code class=\\\"language-text\\\">theme/light/_config.yml</code>加上檔名就可以自訂。</p>\\n<h3 id=\\\"三、增加上方自訂全域導覽列\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E5%A2%9E%E5%8A%A0%E4%B8%8A%E6%96%B9%E8%87%AA%E8%A8%82%E5%85%A8%E5%9F%9F%E5%B0%8E%E8%A6%BD%E5%88%97\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、增加上方自訂全域導覽列</h3>\\n<p>預設為 Home、Archives 這兩個<br>\\n當然得要自訂才爽 XD</p>\\n<p>方法一樣很簡單如下：</p>\\n<ul>\\n<li>找到<code class=\\\"language-text\\\">theme/light/_config.yml</code>裡面的第一行</li>\\n<li>預設狀況應該只有 Home&#x26;Archives<br>\\n<img src=\\\"https://i.imgur.com/reKRQw4.png\\\" alt=\\\"menu\\\"></li>\\n<li>自訂自己的 menu，項目後面即為<strong>連結</strong>，可以直接使用<code class=\\\"language-text\\\">http://google.com</code>之類的連結。</li>\\n</ul>\\n<h3 id=\\\"四、自訂-favicon\\\"><a href=\\\"#%E5%9B%9B%E3%80%81%E8%87%AA%E8%A8%82-favicon\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>四、自訂 favicon</h3>\\n<ul>\\n<li>首先你要有一個 favicon.ico 檔或是.png 檔(這邊預設檔名為<code class=\\\"language-text\\\">favicon.png</code>)</li>\\n<li>將檔案放在 <code class=\\\"language-text\\\">主目錄/source</code> 底下<br>\\n<img src=\\\"https://i.imgur.com/Aar4ap9.png\\\" alt=\\\"favicon path\\\"></li>\\n<li>找到 <code class=\\\"language-text\\\">theme/light/layout/_partial/head.ejs</code>做修改</li>\\n<li>在裡面加上 head.ejs 檔內確認有以下這行 code 即可擁有自己的 favicon</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&lt;link href=&quot;&lt;%- config.root %&gt;favicon.png&quot; rel=&quot;icon&quot;&gt;</code></pre>\\n      </div>\\n<p>以上介紹一些目前知道的自訂方法，<br>\\n希望還有人可以跟我多介紹一些技巧，一起分享吧！</p>\",\"fields\":{\"slug\":\"/2013/04/28/客製化hexo-light-theme/\"},\"frontmatter\":{\"title\":\"客製化hexo light theme\",\"date\":\"Apr 28, 2013\",\"tags\":[\"hexo\",\"theme\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-04-27-建立自己blog的subdomain.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>有鑑於 <code class=\\\"language-text\\\">kpman.github.io</code> 這一個網址實在太難記了，所以就決定將自己有的 domain 利用 subdomain 的方式指過來。<br>\\n以下的介紹是我的個案，我利用 subdomain 而非 TLD 去做。</p>\\n<!-- more -->\\n<h2 id=\\\"一、擁有自己的-domain\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E6%93%81%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84-domain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、擁有自己的 domain</h2>\\n<p>雖然像是廢話 XD\\n但這邊推薦去<a href=\\\"www.godaddy.com/\\\">GoDaddy</a>買 domain.<br>\\n方便又快，在更新 domain 的時間非常快速，理論上一個小時內就可以指到你要的 ip 位置。</p>\\n<h2 id=\\\"二、到-godaddy-設定-subdomain\\\"><a href=\\\"#%E4%BA%8C%E3%80%81%E5%88%B0-godaddy-%E8%A8%AD%E5%AE%9A-subdomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、到 GoDaddy 設定 subdomain</h2>\\n<ol>\\n<li>\\n<p>進到 DNS manager</p>\\n</li>\\n<li>\\n<p>新增一筆 CNAME</p>\\n<p><img src=\\\"https://i.imgur.com/esdG2wP.png\\\" alt=\\\"CNAME\\\"></p>\\n</li>\\n<li>\\n<p>GoDaddy 部分完成</p>\\n</li>\\n</ol>\\n<h2 id=\\\"三、在本機端設置-cname-檔\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E5%9C%A8%E6%9C%AC%E6%A9%9F%E7%AB%AF%E8%A8%AD%E7%BD%AE-cname-%E6%AA%94\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、在本機端設置 CNAME 檔</h2>\\n<p>這邊要在 <code class=\\\"language-text\\\">主目錄-source</code> 底下放一個檔名為 <code class=\\\"language-text\\\">CNAME</code> 的檔案<br>\\n裡面為你要指向的路徑，這邊我是指向 <code class=\\\"language-text\\\">http://code.kpman.cc</code></p>\\n<p><img src=\\\"https://i.imgur.com/gyMS7U6.png\\\" alt=\\\"path\\\"></p>\\n<p>至於如何設置 CNAME 檔案，我是利用在 github repo 上面的 create new file</p>\\n<p><img src=\\\"https://i.imgur.com/AHcVLBW.png\\\" alt=\\\"create new file\\\"></p>\\n<p>設置完之後 clone 下來，然後複製進去<code class=\\\"language-text\\\">主目錄-source</code> 底下 XD<br>\\n（有人知道怎樣做比較好嗎？）</p>\\n<p>理論上這樣子就完成囉！<br>\\n如果有漏掉的麻煩留言給我一起討論:)</p>\\n<h3 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><em>reference</em></h3>\\n<p><a href=\\\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\\\">官方文件</a></p>\",\"fields\":{\"slug\":\"/2013/04/27/建立自己blog的subdomain/\"},\"frontmatter\":{\"title\":\"建立自己blog的subdomain\",\"date\":\"Apr 27, 2013\",\"tags\":[\"domain\",\"hexo\",\"subdomain\",\"url\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-04-26-hexo架blog初體驗.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>是這樣的，一直想要找一個空間，可以清爽的放 code，可以跟其他人交流<br>\\n有鑑於系上好朋友們紛紛都建立起自己的部落格，因此我也加入了這個行列。</p>\\n<p>報著取之於人，回饋之於人的心情，我想要把自己從無到有架設這一個 blog 的過程記錄下來<br>\\n謝謝那些願意指導我的朋友們！</p>\\n<!-- more -->\\n<h2 id=\\\"一、本機環境設定\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E6%9C%AC%E6%A9%9F%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、本機環境設定</h2>\\n<ol>\\n<li>\\n<p>首先你要有 node.js，這是一套快速、簡單且功能強大的 Node.js 網誌框架。</p>\\n</li>\\n<li>\\n<p>接著你要用 <code class=\\\"language-text\\\">npm install -g hexo</code> 來安裝</p>\\n</li>\\n</ol>\\n<p>理論上這樣就完成了，我個人在裝的時候 npm 不給裝，發現前面加上 <code class=\\\"language-text\\\">sudo</code> 就可以解決。</p>\\n<h2 id=\\\"二、github-帳號設定\\\"><a href=\\\"#%E4%BA%8C%E3%80%81github-%E5%B8%B3%E8%99%9F%E8%A8%AD%E5%AE%9A\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、github 帳號設定</h2>\\n<ol>\\n<li>\\n<p>你要申請一個自己的 github 帳號</p>\\n</li>\\n<li>\\n<p>在主頁右上方創建一個新的 repo</p>\\n<p><img src=\\\"https://i.imgur.com/6mFqQlc.png\\\" alt=\\\"create new repo\\\" title=\\\"new repo\\\"></p>\\n</li>\\n<li>\\n<p>Repository name 填入 <code class=\\\"language-text\\\">github帳號.github.com</code> 用來創建 github page</p>\\n</li>\\n</ol>\\n<h2 id=\\\"三、開始使用-hexo\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E9%96%8B%E5%A7%8B%E4%BD%BF%E7%94%A8-hexo\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、開始使用 hexo</h2>\\n<p>建立 hexo</p>\\n<p>{% codeblock %}\\nhexo init\\n{% endcodeblock %}</p>\\n<p>建立一篇文章，將會是<a href=\\\"http://markdown.tw\\\">Markdown</a>形式，可以到 source/_post/title.md 去修改</p>\\n<p>{% codeblock %}\\nhexo new \\\"title\\\"\\n{% endcodeblock %}</p>\\n<p>生成 public 檔</p>\\n<p>{% codeblock %}\\nhexo generate\\n{% endcodeblock %}</p>\\n<p>開啟 server 觀看（預設在 localhost:4000）</p>\\n<p>{% codeblock %}\\nhexo server\\n{% endcodeblock %}</p>\\n<h2 id=\\\"四、發佈到-github-上面\\\"><a href=\\\"#%E5%9B%9B%E3%80%81%E7%99%BC%E4%BD%88%E5%88%B0-github-%E4%B8%8A%E9%9D%A2\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>四、發佈到 github 上面</h2>\\n<p>修改 <code class=\\\"language-text\\\">_config.yml</code> 檔案，最下面加上</p>\\n<p>{% codeblock %}\\ndeploy:\\ntype: github\\nrepository: git@github.com:github 帳號/github 帳號.github.com.git\\nbranch: master\\n{% endcodeblock %}</p>\\n<p>我那時候用 git 的時候，沒有 ssh 認證，如果遇到相同問題可以看<a href=\\\"https://help.github.com/articles/generating-ssh-keys\\\">這篇</a>。<br>\\n照著上面的指令走就可以完成，唯獨 mac 裡面似乎內建 <code class=\\\"language-text\\\">id_rsa</code> 這把 key，這邊我不清楚 XD</p>\\n<p>接著只要輸入</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">hexo deploy</code></pre>\\n      </div>\\n<p>等待 10 分鐘，你的網誌理論上就架好了！網址為 <code class=\\\"language-text\\\">http://github帳號.github.io</code></p>\\n<h3 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><em>reference</em></h3>\\n<ol>\\n<li>\\n<p><a href=\\\"http://zespia.tw/hexo/zh-TW/\\\">官方文件</a>非常詳盡，重點是<em>中文</em>！</p>\\n</li>\\n<li>\\n<p>強者小熊<a href=\\\"http://eva0919.github.io/2013/04/21/%E4%BD%BF%E7%94%A8hexo%E4%BB%A5%E5%8F%8Agithub-page%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/\\\">教學文</a></p>\\n</li>\\n</ol>\",\"fields\":{\"slug\":\"/2013/04/26/hexo架blog初體驗/\"},\"frontmatter\":{\"title\":\"hexo架blog初體驗\",\"date\":\"Apr 26, 2013\",\"tags\":[\"code\",\"hexo\",\"github\"]}}}]}},\"pathContext\":{\"tag\":\"hexo\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tags-hexo-e11d85d2ac26d2d91c78.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2018-06-08-從-Hexo-到-Gatsby.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>本篇文章記錄了我將部落格從 Hexo 轉換到 Gatsby 的過程，以及這過程當中相關設定的經驗分享。</p>\\n<p><img src=\\\"https://i.imgur.com/yGnymMq.png\\\" alt=\\\"From Hexo to Gatsby\\\"></p>\\n<!-- more -->\\n<p>本篇文章並非詳細介紹 Gatsby，如想了解更多，請至<a href=\\\"https://www.gatsbyjs.org/\\\">官方網站</a>。</p>\\n<h2 id=\\\"緣由\\\"><a href=\\\"#%E7%B7%A3%E7%94%B1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>緣由</h2>\\n<p>Hexo 是一套歷史已久的 static site generator，此部落格原本就是利用 Hexo 架起來的。然而，後起之秀 Gatsby 採用著不同的資料流處理方式，加上優異的架構，最重要的是該團隊獲得資金並成立公司的<a href=\\\"https://twitter.com/gatsbyjs/status/999684072501792768\\\">新聞</a>一出，我對於這個專案後續維護更加看好，就決定搬家到 Gatsby。</p>\\n<h2 id=\\\"搬移過程\\\"><a href=\\\"#%E6%90%AC%E7%A7%BB%E9%81%8E%E7%A8%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>搬移過程</h2>\\n<p>此處列出一些在搬部落格過程中需要注意的點，並作大綱的列點，可以選擇自己喜歡的部份研究。</p>\\n<ul>\\n<li><a href=\\\"#markdown-%E6%95%B4%E7%90%86\\\">Markdown 整理</a></li>\\n<li><a href=\\\"#url-%E4%B8%80%E8%87%B4%E6%80%A7\\\">URL 一致性</a></li>\\n<li><a href=\\\"#page-%E8%A8%AD%E8%A8%88\\\">Page 設計</a></li>\\n<li><a href=\\\"#favicon\\\">Favicon</a></li>\\n<li><a href=\\\"#gatsby-plugins--useful-packages\\\">Gatsby plugin &#x26; useful packages</a></li>\\n</ul>\\n<h2 id=\\\"markdown-整理\\\"><a href=\\\"#markdown-%E6%95%B4%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Markdown 整理</h2>\\n<p>Hexo 原生就提供產生文章的 CLI API，因此使用上蠻方便，只要一個指令就可以自動產生 Markdown 檔。而 Gatsby 就得要自行選擇文檔的類型，因為當初選用 Hexo 就是它可以利用 Markdown 寫部落格，所以轉換到 Gatsby 自然就沿用 Markdown 了。</p>\\n<h3 id=\\\"gatsby-source-filesystem\\\"><a href=\\\"#gatsby-source-filesystem\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gatsby-source-filesystem</h3>\\n<p>在部落格架構設計上，我把所有原始檔放在 <code class=\\\"language-text\\\">./content/_posts</code> 底下。但想讓 Gatsby 知道文件位置，就得利用 <code class=\\\"language-text\\\">gatsby-source-filesystem</code> 這個 plugin，如下設定：</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-config.js</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'gatsby-source-filesystem'</span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'posts'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// Name this source</span>\\n      path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./content/_posts'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>ps. Gatsby 的範例都利用 <code class=\\\"language-text\\\">``(backtick)</code> 包住字串，但我還是習慣使用 single quote。</p>\\n<h3 id=\\\"gatsby-transformer-remark\\\"><a href=\\\"#gatsby-transformer-remark\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gatsby-transformer-remark</h3>\\n<p>把原始 file 讀進來之後，Gatsby 也提供了專為 Markdown 檔處理的 plugin，名為 <code class=\\\"language-text\\\">gatsby-transformer-remark</code>。<br>\\n經過這個 plugin 處理過的資料，會被轉成 Gatsby 架構下的 <code class=\\\"language-text\\\">node</code>，此 node 的 type 為 <code class=\\\"language-text\\\">MarkdownRemark</code>，該 node 會增加許多有用資訊，例如：<code class=\\\"language-text\\\">html</code>, <code class=\\\"language-text\\\">headings</code>, <code class=\\\"language-text\\\">excerpt</code> 等等，省下許多 parse Markdown 檔的功夫。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-config.js</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'gatsby-transformer-remark'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>後續還會介紹更多這個 plugin 的設定方式，也可直接參考 <a href=\\\"https://github.com/kpman/kpman.github.com/blob/0f02b98eaa23e92f794adf4a14bfda4c1ec3be0d/gatsby-config.js#L24-L42\\\">repo</a></p>\\n<h2 id=\\\"url-一致性\\\"><a href=\\\"#url-%E4%B8%80%E8%87%B4%E6%80%A7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>URL 一致性</h2>\\n<p>當初利用 Hexo 建立出來的 URL 為類似 <code class=\\\"language-text\\\">/2017/07/03/利用-Hub-來自動發-GitHub-PR/</code> 這樣的 pattern，\\n為了不 breaking 既有 URL，我選擇將新版的 URL 設計和當初一樣。</p>\\n<p>此時就得讓 Gatsby 讀懂日期，這邊當初猶豫是要從 Markdown 裡面拿或者是從檔名拿日期。\\n將日期寫在檔名有多一個好處，就是可以利用檔名來做排序，基於這樣就決定將原本的所有 Markdown 檔都加上日期，修改過後的檔名為 <code class=\\\"language-text\\\">2017-07-03-利用-Hub-來自動發-GitHub-PR.md</code>。</p>\\n<h3 id=\\\"oncreatenode\\\"><a href=\\\"#oncreatenode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>onCreateNode</h3>\\n<p>Gatsby 提供 <code class=\\\"language-text\\\">onCreateNode</code> 此 API 操作，原理上是在 Gatsby 要 createNode 時，在該 node 上面加上一些我們用的到的資訊。\\n我在此處便是利用 RegExp 將檔名給 parse 出來，並在 node 上面新增一個 field 叫做 <code class=\\\"language-text\\\">slug</code>，也就是 URL 上面除了 domain 後面的 <a href=\\\"https://nodejs.org/api/url.html\\\"><code class=\\\"language-text\\\">pathname</code></a> 部分。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-node.js</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">BLOG_POST_FILENAME_REGEX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token regex\\\">/([0-9]+)-([0-9]+)-([0-9]+)-(.+)\\\\.md$/</span><span class=\\\"token punctuation\\\">;</span>\\n\\nexports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onCreateNode</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node<span class=\\\"token punctuation\\\">,</span> getNode<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createNodeField <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// 確定是 Markdown 檔再做操作</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>internal<span class=\\\"token punctuation\\\">.</span>type <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'MarkdownRemark'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> relativePath <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getNode</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">BLOG_POST_FILENAME_REGEX</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">exec</span><span class=\\\"token punctuation\\\">(</span>relativePath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> year <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> month <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> day <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> filename <span class=\\\"token operator\\\">=</span> match<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// 組出我們要的 slug pattern</span>\\n    <span class=\\\"token keyword\\\">const</span> slug <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>year<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>month<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>day<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>filename<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// 在該 node 上面多增加一個欄位，未來可以 Query</span>\\n    <span class=\\\"token function\\\">createNodeField</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token punctuation\\\">,</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'slug'</span><span class=\\\"token punctuation\\\">,</span>\\n      value<span class=\\\"token punctuation\\\">:</span> slug<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>有了前述的 node 資料之後，我們在 Gatsby 創造這些 page，讓使用者在進入 <code class=\\\"language-text\\\">/YYYY/MM/DD/&lt;blog-title&gt;/</code> 這樣的 URL 可以順利取得文章內容。</p>\\n<h3 id=\\\"createpages\\\"><a href=\\\"#createpages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>createPages</h3>\\n<p>Gatsby 提供的另一個 API 叫做 <code class=\\\"language-text\\\">createPages</code>，此 API 就是你所有的 page 都需要透過該 API 來創造，如此一來 Gatsby 才可以正確的回傳該頁面。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// gatsby-node.js</span>\\nexports<span class=\\\"token punctuation\\\">.</span>createPages <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createPage <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> allMarkdown <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n    {\\n      allMarkdownRemark {\\n        edges {\\n          node {\\n            fields {\\n              slug # 此處的 slug 就是上述 onCreateNode 時候加上去的\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  allMarkdown<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allMarkdownRemark<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> slug <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>fields<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token punctuation\\\">:</span> slug<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 告訴 Gatsby 這個 URL path</span>\\n      <span class=\\\"token comment\\\">// 這邊選用的 component，就可以在 pageQuery 使用 context 所傳進去的 slug</span>\\n      component<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./src/templates/post.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      layout<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'index'</span><span class=\\\"token punctuation\\\">,</span>\\n      context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Data passed to context is available in page queries as GraphQL variables.</span>\\n        slug<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>-</p>\\n<h2 id=\\\"page-設計\\\"><a href=\\\"#page-%E8%A8%AD%E8%A8%88\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Page 設計</h2>\\n<p>在 Gatsby 的架構內，每一個需要不同 URL 的頁面都需要自己創造一個 page，例如：首頁、每一篇文章、archive 頁面等等，底下列出此部落格需要的 URL：</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">/</code>: index page</li>\\n<li><code class=\\\"language-text\\\">/YYYY/MM/DD/&lt;blog-title&gt;/</code>: article page</li>\\n<li><code class=\\\"language-text\\\">/archives</code>: archives page</li>\\n<li><code class=\\\"language-text\\\">/tags/&lt;tag&gt;</code>: tags page</li>\\n</ul>\\n<h3 id=\\\"index-page\\\"><a href=\\\"#index-page\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>index page</h3>\\n<p>因為 Gatsby 底下會自動的把 <code class=\\\"language-text\\\">./src/pages/*.js</code> 自動 create page，所以我們在設計首頁的時候，就是去修改 <code class=\\\"language-text\\\">./src/pages/index.js</code> 此頁即可。</p>\\n<p>該頁最主要就是把所有的文章時間、title 等資料拿出來，GraphQL 的 query 如下：</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\">\\n      <pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\">// src/pages/index.js\\nexport const pageQuery <span class=\\\"token operator\\\">=</span> graphql`\\n  <span class=\\\"token keyword\\\">query</span> BlogIndexQuery <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\"># query 依照 date 排序</span>\\n    allMarkdownRemark<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">sort</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">fields</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>frontmatter___date<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">order</span><span class=\\\"token punctuation\\\">:</span> DESC <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      edges <span class=\\\"token punctuation\\\">{</span>\\n        node <span class=\\\"token punctuation\\\">{</span>\\n          fields <span class=\\\"token punctuation\\\">{</span>\\n            slug\\n          <span class=\\\"token punctuation\\\">}</span>\\n          html <span class=\\\"token comment\\\"># 需要把 html 拿回來 render</span>\\n          frontmatter <span class=\\\"token punctuation\\\">{</span>\\n            title\\n            <span class=\\\"token comment\\\"># 可以在此處就把 date format 成我們要的格式</span>\\n            date<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">formatString</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"MMM DD, YYYY\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n            tags\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n`;</code></pre>\\n      </div>\\n<p>上述的 <code class=\\\"language-text\\\">html</code> 也可以用 <code class=\\\"language-text\\\">excerpt</code> 去拿，但我選擇拿 html 再選擇我要的顯示在首頁部分內容。</p>\\n<h3 id=\\\"archives-page\\\"><a href=\\\"#archives-page\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>archives page</h3>\\n<p>該頁面與 index page 大同小異，該 page 位於 <code class=\\\"language-text\\\">./src/pages/archives.js</code>，唯一不同的是因為 archives page 有一種整理的效果，因此我們只要拿 title、date、tags 即可。</p>\\n<h3 id=\\\"tags-page\\\"><a href=\\\"#tags-page\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>tags page</h3>\\n<p>tags page 顧名思義就是每篇文章我會給一些 tag，寫在 Markdown 最上方，所以可以利用套件幫我們產生的 frontmatter 拿到每一篇的 tags 資料，但要怎樣擁有不同頁的 tag 呢？</p>\\n<p>此時就必須在 createPage 的時候就將所有的 tag 拿出來，然後產生每一個 tag 的 page。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">//</span>\\nexports<span class=\\\"token punctuation\\\">.</span>createPages <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createPage <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> allMarkdown <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n    {\\n      allMarkdownRemark {\\n        edges {\\n          node {\\n            frontmatter {\\n              tags\\n            }\\n          }\\n        }\\n      }\\n    }\\n  `</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  allMarkdown<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allMarkdownRemark<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> tags <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>frontmatter<span class=\\\"token punctuation\\\">;</span>\\n\\n    tags<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>tag <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/tags/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 此處創造 tag URL</span>\\n        component<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./src/templates/tags.js'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 選擇用 tags template</span>\\n        layout<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'index'</span><span class=\\\"token punctuation\\\">,</span>\\n        context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n          tag<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 傳進去讓 tags template 的 pageQuery 可以使用該 tag 去 query</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>創造完每一頁 tag 的 page 之後，我們來看看 tags template 應該怎樣寫。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"graphql\\\">\\n      <pre class=\\\"language-graphql\\\"><code class=\\\"language-graphql\\\">// ./src/templates/tags.js\\nexport const pageQuery <span class=\\\"token operator\\\">=</span> graphql`\\n  <span class=\\\"token keyword\\\">query</span> PostByTag<span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$tag</span><span class=\\\"token punctuation\\\">:</span> String<span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    allMarkdownRemark<span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token attr-name\\\">filter</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">frontmatter</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">tags</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">in</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token variable\\\">$tag</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token attr-name\\\">sort</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token attr-name\\\">fields</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>frontmatter___date<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">order</span><span class=\\\"token punctuation\\\">:</span> DESC <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      edges <span class=\\\"token punctuation\\\">{</span>\\n        node <span class=\\\"token punctuation\\\">{</span>\\n          id\\n          html\\n          fields <span class=\\\"token punctuation\\\">{</span>\\n            slug\\n          <span class=\\\"token punctuation\\\">}</span>\\n          frontmatter <span class=\\\"token punctuation\\\">{</span>\\n            title\\n            date<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">formatString</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"MMM DD, YYYY\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n            tags\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n`;</code></pre>\\n      </div>\\n<p>最關鍵的就是 Query 的參數了，利用 createPage 傳進來的 <code class=\\\"language-text\\\">$tag</code>，我們在 <code class=\\\"language-text\\\">allMarkdownRemark</code> 的參數就利用到了 <code class=\\\"language-text\\\">filter</code>、<code class=\\\"language-text\\\">sort</code> 等使用情境，拿回所有擁有這個 tag 的文章資料再去做 render。</p>\\n<h2 id=\\\"favicon\\\"><a href=\\\"#favicon\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Favicon</h2>\\n<p>當初設定 Favicon 也遇到一些問題，本來以為放在 <code class=\\\"language-text\\\">/static/favicon.ico</code> 就可以讓瀏覽器抓到，可是怎麼嘗試都不成功。\\n後來請教同事 <a href=\\\"https://github.com/jigsawye\\\">@jigsawye</a> 才發現原來是要利用 loader，也就是直接將 favicon file 給 <code class=\\\"language-text\\\">import</code> 到環境內，再利用 <code class=\\\"language-text\\\">react-helmet</code> 做操作。</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// ./src/layouts/Head.js</span>\\n<span class=\\\"token keyword\\\">import</span> Helmet <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-helmet'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> Favicon <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../assets/favicon.png'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Head</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>Helmet<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>link rel<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"icon\\\"</span> type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"image/png\\\"</span> sizes<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"30x30\\\"</span> href<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>Favicon<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Helmet<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> Head<span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>-</p>\\n<h2 id=\\\"gatsby-plugins--useful-packages\\\"><a href=\\\"#gatsby-plugins--useful-packages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gatsby plugins &#x26; useful packages</h2>\\n<p>推薦幾個在架設這個部落格用到的 Gatsby plugin</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-react-next</code>: v1 還是內建 react v15，所以需要裝這套</li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-react-helmet</code>: 操作該頁面的 HTML meta 資料</li>\\n<li><code class=\\\"language-text\\\">gatsby-remark-prismjs</code>: 可以將 Markdown 內的程式碼做上色</li>\\n<li><code class=\\\"language-text\\\">gatsby-remark-autolink-headers</code>: 可以讓 Markdown 的 Heading 都自動加上 id，瀏覽更方便</li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-sitemap</code>：自動產生 Sitemap</li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-feed</code>：自動產生 RSS feed，production 才會輸出，輸出檔名為 <code class=\\\"language-text\\\">/rss.xml</code></li>\\n<li><code class=\\\"language-text\\\">gatsby-plugin-google-analytics</code>: 可以載入 GA 使用</li>\\n<li><code class=\\\"language-text\\\">disqus-react</code>: Disqus 官方的 React 套件</li>\\n</ul>\\n<h2 id=\\\"結論\\\"><a href=\\\"#%E7%B5%90%E8%AB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>結論</h2>\\n<p>這次的搬家花了不少心力，其中最多的時間其實是在重新架構整個 layout，而搬家過後因為 client side render，整體速度提昇不少，也對於 Gatsby 的生態圈蠻看好，希望可以持續發展。</p>\\n<p>雖然現在市面上有很多撰寫文章的平台（例如：Medium），不過這種一手打造的部落格，擁有自己 content 的感覺，或許就是工程師的浪漫吧。</p>\",\"fields\":{\"slug\":\"/2018/06/08/從-Hexo-到-Gatsby/\"},\"frontmatter\":{\"title\":\"從 Hexo 到 Gatsby\",\"date\":\"Jun 08, 2018\",\"tags\":[\"hexo\",\"gatsby\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-05-08-在hexo自訂rss.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>趁著好朋友在旁邊的情況下，請教他學會了在 hexo 自訂 rss，再次感受到技術這種東西，真的是當面交流才會發揮他的效益。</p>\\n<!-- more -->\\n<h3 id=\\\"一、本機環境\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E6%9C%AC%E6%A9%9F%E7%92%B0%E5%A2%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、本機環境</h3>\\n<p>在終端機下輸入以下</p>\\n<p>{% codeblock %}\\nnpm install hexo-generator-feed --save\\n{% endcodeblock %}</p>\\n<p>權限沒有取得的記得前面加上<code class=\\\"language-text\\\">sudo</code>。</p>\\n<h3 id=\\\"二、修改_configyml\\\"><a href=\\\"#%E4%BA%8C%E3%80%81%E4%BF%AE%E6%94%B9_configyml\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、修改_config.yml</h3>\\n<p>在主目錄底下的<code class=\\\"language-text\\\">_config.yml</code>檔加上</p>\\n<p>{% codeblock %}\\nplugins:</p>\\n<ul>\\n<li>hexo-generator-feed\\n{% endcodeblock %}</li>\\n</ul>\\n<p><img src=\\\"https://i.imgur.com/w39zkK6.png\\\" alt=\\\"modify _config.yml\\\" title=\\\"modify _config.yml\\\"></p>\\n<p>如此一來便完成了環境設置。</p>\\n<h3 id=\\\"三、要怎樣找到？\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E8%A6%81%E6%80%8E%E6%A8%A3%E6%89%BE%E5%88%B0%EF%BC%9F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、要怎樣找到？</h3>\\n<p>在 hexo generate 之後，會發現 public 資料夾底下多了 atom.xml<br>\\n在<a href=\\\"http://www.feedly.com/\\\">feedly</a>這類的閱讀收集器<br>\\n只要輸入<code class=\\\"language-text\\\">domain/atom</code>就可以找到<br>\\n例如要訂閱我的 blog 只要輸入<code class=\\\"language-text\\\">code.kpman.cc/atom</code>就可以搜尋到囉！</p>\\n<p><img src=\\\"https://i.imgur.com/Hk12y1N.png\\\" alt=\\\"rss\\\" title=\\\"feedly rss search\\\"></p>\\n<p>突然發現我的 blog 只有一個人訂閱，那個人就是我自己...</p>\\n<h3 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><em>reference</em></h3>\\n<ol>\\n<li><a href=\\\"https://github.com/tommy351/hexo/wiki/Plugins\\\">hexo plugins</a></li>\\n<li><a href=\\\"http://michaelhsu.tw/2013/05/05/rssatom-sitemap-for-seo/\\\">RSS/Atom、Sitemap for SEO</a></li>\\n</ol>\\n<p>感謝強者阿志耐心面授機宜:)</p>\",\"fields\":{\"slug\":\"/2013/05/08/在hexo自訂rss/\"},\"frontmatter\":{\"title\":\"在hexo自訂rss\",\"date\":\"May 08, 2013\",\"tags\":[\"rss\",\"hexo\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-04-28-客製化hexo-light-theme.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>分享一些目前知道的客製化 theme 技巧。<br>\\n其實非常簡單，但是這些技巧如果沒有問過或是自己看過文件，<br>\\n一時間也無法摸透，所以覺得應該值得把它記錄下來。</p>\\n<!-- more -->\\n<h3 id=\\\"一、增加-disqus-留言板\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E5%A2%9E%E5%8A%A0-disqus-%E7%95%99%E8%A8%80%E6%9D%BF\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、增加 Disqus 留言板</h3>\\n<ul>\\n<li>到<a href=\\\"http://disqus.com/\\\">Disqus</a>申請帳號</li>\\n<li>右上角的 Dashboard <code class=\\\"language-text\\\">+Add</code> 申請一個新的帳號</li>\\n<li>將網址、name、shortname 打好後，要把 <code class=\\\"language-text\\\">shortname</code> 記住！\\n_ 修改本機目錄下的 <code class=\\\"language-text\\\">_confid.yml</code>\\n_ 在 <code class=\\\"language-text\\\">disqus_shortname</code> 貼上自己的 shortname</li>\\n</ul>\\n<p>完成～</p>\\n<p>※ 後記：<br>\\n若你在申請完 disqus 貼到自己的 blog 上面，發現出現很多不必要的連結，請到 disqus 的 dashboard 去修改。<br>\\n右上方 <code class=\\\"language-text\\\">Setting</code> -> <code class=\\\"language-text\\\">Discovery</code> -> 將 Discovery level 拉到最右邊，如下圖<br>\\n<img src=\\\"https://i.imgur.com/eeEjwka.png\\\" alt=\\\"Discovery level\\\"></p>\\n<h3 id=\\\"二、增加右方側欄-widget\\\"><a href=\\\"#%E4%BA%8C%E3%80%81%E5%A2%9E%E5%8A%A0%E5%8F%B3%E6%96%B9%E5%81%B4%E6%AC%84-widget\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、增加右方側欄 widget</h3>\\n<p>在標題就已經破梗囉 XD<br>\\n右方出現那些『Tag』『Tag Cloud』等欄位，其實就是修改 widget 過後得到的結果。<br>\\n方法如下：</p>\\n<ul>\\n<li>找到 <code class=\\\"language-text\\\">theme/light/layout/_widget</code> ，可以發現很多 <strong>ejs</strong> 檔</li>\\n<li>有些是已經自訂好了，例如 <code class=\\\"language-text\\\">category</code> <code class=\\\"language-text\\\">recent_posts</code> 等</li>\\n<li>在 <code class=\\\"language-text\\\">theme/light/_config.yml</code> 內，修改<strong>widgets</strong>，在底下新增你要的 ejs 檔名即可～</li>\\n</ul>\\n<p>同樣方法可以自己寫 ejs 檔，一樣在<code class=\\\"language-text\\\">theme/light/_config.yml</code>加上檔名就可以自訂。</p>\\n<h3 id=\\\"三、增加上方自訂全域導覽列\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E5%A2%9E%E5%8A%A0%E4%B8%8A%E6%96%B9%E8%87%AA%E8%A8%82%E5%85%A8%E5%9F%9F%E5%B0%8E%E8%A6%BD%E5%88%97\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、增加上方自訂全域導覽列</h3>\\n<p>預設為 Home、Archives 這兩個<br>\\n當然得要自訂才爽 XD</p>\\n<p>方法一樣很簡單如下：</p>\\n<ul>\\n<li>找到<code class=\\\"language-text\\\">theme/light/_config.yml</code>裡面的第一行</li>\\n<li>預設狀況應該只有 Home&#x26;Archives<br>\\n<img src=\\\"https://i.imgur.com/reKRQw4.png\\\" alt=\\\"menu\\\"></li>\\n<li>自訂自己的 menu，項目後面即為<strong>連結</strong>，可以直接使用<code class=\\\"language-text\\\">http://google.com</code>之類的連結。</li>\\n</ul>\\n<h3 id=\\\"四、自訂-favicon\\\"><a href=\\\"#%E5%9B%9B%E3%80%81%E8%87%AA%E8%A8%82-favicon\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>四、自訂 favicon</h3>\\n<ul>\\n<li>首先你要有一個 favicon.ico 檔或是.png 檔(這邊預設檔名為<code class=\\\"language-text\\\">favicon.png</code>)</li>\\n<li>將檔案放在 <code class=\\\"language-text\\\">主目錄/source</code> 底下<br>\\n<img src=\\\"https://i.imgur.com/Aar4ap9.png\\\" alt=\\\"favicon path\\\"></li>\\n<li>找到 <code class=\\\"language-text\\\">theme/light/layout/_partial/head.ejs</code>做修改</li>\\n<li>在裡面加上 head.ejs 檔內確認有以下這行 code 即可擁有自己的 favicon</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&lt;link href=&quot;&lt;%- config.root %&gt;favicon.png&quot; rel=&quot;icon&quot;&gt;</code></pre>\\n      </div>\\n<p>以上介紹一些目前知道的自訂方法，<br>\\n希望還有人可以跟我多介紹一些技巧，一起分享吧！</p>\",\"fields\":{\"slug\":\"/2013/04/28/客製化hexo-light-theme/\"},\"frontmatter\":{\"title\":\"客製化hexo light theme\",\"date\":\"Apr 28, 2013\",\"tags\":[\"hexo\",\"theme\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-04-27-建立自己blog的subdomain.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>有鑑於 <code class=\\\"language-text\\\">kpman.github.io</code> 這一個網址實在太難記了，所以就決定將自己有的 domain 利用 subdomain 的方式指過來。<br>\\n以下的介紹是我的個案，我利用 subdomain 而非 TLD 去做。</p>\\n<!-- more -->\\n<h2 id=\\\"一、擁有自己的-domain\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E6%93%81%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84-domain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、擁有自己的 domain</h2>\\n<p>雖然像是廢話 XD\\n但這邊推薦去<a href=\\\"www.godaddy.com/\\\">GoDaddy</a>買 domain.<br>\\n方便又快，在更新 domain 的時間非常快速，理論上一個小時內就可以指到你要的 ip 位置。</p>\\n<h2 id=\\\"二、到-godaddy-設定-subdomain\\\"><a href=\\\"#%E4%BA%8C%E3%80%81%E5%88%B0-godaddy-%E8%A8%AD%E5%AE%9A-subdomain\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、到 GoDaddy 設定 subdomain</h2>\\n<ol>\\n<li>\\n<p>進到 DNS manager</p>\\n</li>\\n<li>\\n<p>新增一筆 CNAME</p>\\n<p><img src=\\\"https://i.imgur.com/esdG2wP.png\\\" alt=\\\"CNAME\\\"></p>\\n</li>\\n<li>\\n<p>GoDaddy 部分完成</p>\\n</li>\\n</ol>\\n<h2 id=\\\"三、在本機端設置-cname-檔\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E5%9C%A8%E6%9C%AC%E6%A9%9F%E7%AB%AF%E8%A8%AD%E7%BD%AE-cname-%E6%AA%94\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、在本機端設置 CNAME 檔</h2>\\n<p>這邊要在 <code class=\\\"language-text\\\">主目錄-source</code> 底下放一個檔名為 <code class=\\\"language-text\\\">CNAME</code> 的檔案<br>\\n裡面為你要指向的路徑，這邊我是指向 <code class=\\\"language-text\\\">http://code.kpman.cc</code></p>\\n<p><img src=\\\"https://i.imgur.com/gyMS7U6.png\\\" alt=\\\"path\\\"></p>\\n<p>至於如何設置 CNAME 檔案，我是利用在 github repo 上面的 create new file</p>\\n<p><img src=\\\"https://i.imgur.com/AHcVLBW.png\\\" alt=\\\"create new file\\\"></p>\\n<p>設置完之後 clone 下來，然後複製進去<code class=\\\"language-text\\\">主目錄-source</code> 底下 XD<br>\\n（有人知道怎樣做比較好嗎？）</p>\\n<p>理論上這樣子就完成囉！<br>\\n如果有漏掉的麻煩留言給我一起討論:)</p>\\n<h3 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><em>reference</em></h3>\\n<p><a href=\\\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\\\">官方文件</a></p>\",\"fields\":{\"slug\":\"/2013/04/27/建立自己blog的subdomain/\"},\"frontmatter\":{\"title\":\"建立自己blog的subdomain\",\"date\":\"Apr 27, 2013\",\"tags\":[\"domain\",\"hexo\",\"subdomain\",\"url\"]}}},{\"node\":{\"id\":\"/Users/kpman/workspace/kpman.github.com/content/_posts/2013-04-26-hexo架blog初體驗.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>是這樣的，一直想要找一個空間，可以清爽的放 code，可以跟其他人交流<br>\\n有鑑於系上好朋友們紛紛都建立起自己的部落格，因此我也加入了這個行列。</p>\\n<p>報著取之於人，回饋之於人的心情，我想要把自己從無到有架設這一個 blog 的過程記錄下來<br>\\n謝謝那些願意指導我的朋友們！</p>\\n<!-- more -->\\n<h2 id=\\\"一、本機環境設定\\\"><a href=\\\"#%E4%B8%80%E3%80%81%E6%9C%AC%E6%A9%9F%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>一、本機環境設定</h2>\\n<ol>\\n<li>\\n<p>首先你要有 node.js，這是一套快速、簡單且功能強大的 Node.js 網誌框架。</p>\\n</li>\\n<li>\\n<p>接著你要用 <code class=\\\"language-text\\\">npm install -g hexo</code> 來安裝</p>\\n</li>\\n</ol>\\n<p>理論上這樣就完成了，我個人在裝的時候 npm 不給裝，發現前面加上 <code class=\\\"language-text\\\">sudo</code> 就可以解決。</p>\\n<h2 id=\\\"二、github-帳號設定\\\"><a href=\\\"#%E4%BA%8C%E3%80%81github-%E5%B8%B3%E8%99%9F%E8%A8%AD%E5%AE%9A\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>二、github 帳號設定</h2>\\n<ol>\\n<li>\\n<p>你要申請一個自己的 github 帳號</p>\\n</li>\\n<li>\\n<p>在主頁右上方創建一個新的 repo</p>\\n<p><img src=\\\"https://i.imgur.com/6mFqQlc.png\\\" alt=\\\"create new repo\\\" title=\\\"new repo\\\"></p>\\n</li>\\n<li>\\n<p>Repository name 填入 <code class=\\\"language-text\\\">github帳號.github.com</code> 用來創建 github page</p>\\n</li>\\n</ol>\\n<h2 id=\\\"三、開始使用-hexo\\\"><a href=\\\"#%E4%B8%89%E3%80%81%E9%96%8B%E5%A7%8B%E4%BD%BF%E7%94%A8-hexo\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>三、開始使用 hexo</h2>\\n<p>建立 hexo</p>\\n<p>{% codeblock %}\\nhexo init\\n{% endcodeblock %}</p>\\n<p>建立一篇文章，將會是<a href=\\\"http://markdown.tw\\\">Markdown</a>形式，可以到 source/_post/title.md 去修改</p>\\n<p>{% codeblock %}\\nhexo new \\\"title\\\"\\n{% endcodeblock %}</p>\\n<p>生成 public 檔</p>\\n<p>{% codeblock %}\\nhexo generate\\n{% endcodeblock %}</p>\\n<p>開啟 server 觀看（預設在 localhost:4000）</p>\\n<p>{% codeblock %}\\nhexo server\\n{% endcodeblock %}</p>\\n<h2 id=\\\"四、發佈到-github-上面\\\"><a href=\\\"#%E5%9B%9B%E3%80%81%E7%99%BC%E4%BD%88%E5%88%B0-github-%E4%B8%8A%E9%9D%A2\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>四、發佈到 github 上面</h2>\\n<p>修改 <code class=\\\"language-text\\\">_config.yml</code> 檔案，最下面加上</p>\\n<p>{% codeblock %}\\ndeploy:\\ntype: github\\nrepository: git@github.com:github 帳號/github 帳號.github.com.git\\nbranch: master\\n{% endcodeblock %}</p>\\n<p>我那時候用 git 的時候，沒有 ssh 認證，如果遇到相同問題可以看<a href=\\\"https://help.github.com/articles/generating-ssh-keys\\\">這篇</a>。<br>\\n照著上面的指令走就可以完成，唯獨 mac 裡面似乎內建 <code class=\\\"language-text\\\">id_rsa</code> 這把 key，這邊我不清楚 XD</p>\\n<p>接著只要輸入</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">hexo deploy</code></pre>\\n      </div>\\n<p>等待 10 分鐘，你的網誌理論上就架好了！網址為 <code class=\\\"language-text\\\">http://github帳號.github.io</code></p>\\n<h3 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><em>reference</em></h3>\\n<ol>\\n<li>\\n<p><a href=\\\"http://zespia.tw/hexo/zh-TW/\\\">官方文件</a>非常詳盡，重點是<em>中文</em>！</p>\\n</li>\\n<li>\\n<p>強者小熊<a href=\\\"http://eva0919.github.io/2013/04/21/%E4%BD%BF%E7%94%A8hexo%E4%BB%A5%E5%8F%8Agithub-page%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/\\\">教學文</a></p>\\n</li>\\n</ol>\",\"fields\":{\"slug\":\"/2013/04/26/hexo架blog初體驗/\"},\"frontmatter\":{\"title\":\"hexo架blog初體驗\",\"date\":\"Apr 26, 2013\",\"tags\":[\"code\",\"hexo\",\"github\"]}}}]}},\"pathContext\":{\"tag\":\"hexo\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tags-hexo.json\n// module id = 413\n// module chunks = 261373376314"],"sourceRoot":""}
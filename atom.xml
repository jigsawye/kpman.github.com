<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[kpman | code]]></title>
  <subtitle><![CDATA[記錄開發過程大小事]]></subtitle>
  <link href="http://code.kpman.cc/atom.xml" rel="self"/>
  <link href="http://code.kpman.cc"/>
  <updated>2015-02-07T13:15:23.663Z</updated>
  <id>http://code.kpman.cc/</id>
  <author>
    <name><![CDATA[kpman | code]]></name>
    <email><![CDATA[s92f002@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Sublime 與 iTerm 的視窗配置]]></title>
    <link href="http://code.kpman.cc/2015/02/07/Sublime-與-iTerm-的視窗配置/"/>
    <id>http://code.kpman.cc/2015/02/07/Sublime-與-iTerm-的視窗配置/</id>
    <published>2015-02-07T11:55:04.000Z</published>
    <updated>2015-02-07T13:14:35.000Z</updated>
    <content type="html"><![CDATA[<p>常用的編輯器是 Sublime Text 3，但是終端機是 iTerm2，兩者一直沒有 IDE 般的整合。<br>本篇記錄下如何更改 iTerm2 的視窗配置，讓兩者操作體驗上有更佳的配合。</p>
<p><img src="http://i.imgur.com/wI92DCX.png" alt=""></p>
<a id="more"></a>
<h3 id="一般情境">一般情境</h3>
<p>一般在 Sublime 和 iTerm 之間切換，我都是利用 <code>cmd+tab</code> 來做切換，但是這樣的使用情境，如果在筆電上開發，則會在執行 iTerm 的時候遮到 Sublime 的內容。如下圖所示：</p>
<p><img src="http://i.imgur.com/7lg3dx4.png" alt=""></p>
<p>讓我們更改 iTerm 的視窗配置，來改善這樣的情況！</p>
<h3 id="iTerm_視窗設定">iTerm 視窗設定</h3>
<p><img src="http://i.imgur.com/gfMTEKP.png" alt=""></p>
<p>根據上圖，依序找到 Profiles —&gt; Window —&gt; Style: Bottom of screen<br>調整完後視窗的高度會根據設定的 Rows 高度來決定。</p>
<h3 id="快捷鍵設定">快捷鍵設定</h3>
<p>根據個人習慣，在不與 Sublime 相關的快捷鍵衝突，我建議採用 <code>cmd+.</code> 來啟動 iTerm。</p>
<p><img src="http://i.imgur.com/Iw6ywHt.png" alt=""></p>
<p>※ 記得重新啟動 iTerms 來檢視設定的效果。</p>
<h3 id="成果_Demo">成果 Demo</h3>
<p>做完上面的設定就大功告成了！</p>
<p>未來在編輯的時候，就可以利用 <code>cmd+.</code> 來啟動＆關閉終端機，操作感覺接近是內建在 Sublime 的環境。</p>
<p>如下圖所示：</p>
<p><img src="http://i.imgur.com/cJNfCCa.png" alt=""></p>
<p>Enjoy!</p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/sublime-text/" term="sublime text"/>
    <category scheme="http://code.kpman.cc/tags/terminal/" term="terminal"/>
    <category scheme="http://code.kpman.cc/tags/tips/" term="tips"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Sublime Text 3 Mac 指南]]></title>
    <link href="http://code.kpman.cc/2014/10/14/sublime-text-3-mac-指南/"/>
    <id>http://code.kpman.cc/2014/10/14/sublime-text-3-mac-指南/</id>
    <published>2014-10-14T07:16:59.000Z</published>
    <updated>2014-10-14T09:50:29.000Z</updated>
    <content type="html"><![CDATA[<p>本篇是我根據自己使用習慣所做的快捷鍵整理，使用sublime text這套編輯器已經有2年之餘，本身是個快捷鍵愛好者，對於發掘好用的快捷鍵樂此不疲，因此整理常用的快捷鍵在這篇，針對的是mac使用者所使用者快捷鍵，希望對各位有幫助。</p>
<a id="more"></a>
<h1 id="快捷鍵">快捷鍵</h1>
<p>左邊為本篇所採用的縮寫，右邊則為鍵盤上面的標示</p>
<ul>
<li>cmd = command</li>
<li>shift = shift</li>
<li>option = option (alt)</li>
<li>control = control</li>
<li>pkg-ctrl = package control (command + shift + p)</li>
</ul>
<h2 id="基礎模式">基礎模式</h2>
<p>「基礎模式」介紹非sublime專用的快捷鍵，是一般使用者都可以快速上手的部分，想要看進階的可以跳過這部份。</p>
<h3 id="1-_cmd_+_o_(open)">1. cmd + o (open)</h3>
<p>快速開啟整個資料夾(專案)</p>
<h3 id="2-_cmd_+_w">2. cmd + w</h3>
<p>關閉視窗分頁</p>
<h3 id="3-_cmd_+_n">3. cmd + n</h3>
<p>開新分頁</p>
<h3 id="4-_cmd_+_shift_+_t">4. cmd + shift + t</h3>
<p>重新開啟剛剛關閉的分頁</p>
<h3 id="5-_cmd_+_shift_+_v">5. cmd + shift + v</h3>
<p>貼上時，符合縮排</p>
<h2 id="畫面配置">畫面配置</h2>
<p>以下介紹sublime的畫面配置，常常因為編輯情境的所需，利用快捷鍵讓自己的畫面配置更加有彈性。</p>
<h3 id="1-_cmd_+_option_+_數字">1. cmd + option + 數字</h3>
<p>分割視窗，讓你的編輯範圍有多個panel。<br>常用為<code>cmd + option + 1</code> 和<code>cmd + option + 2</code> 之間切換。<br>使用情境：左邊.html右邊.css，編輯起來快速又方便。<br>建議：利用空白鍵右邊的兩個連續按鈕搭配數字。</p>
<p><img src="http://i.imgur.com/wWrUvSA.gif" alt=""></p>
<h3 id="2-_cmd_+_k_再_cmd_+_b">2. cmd + k 再 cmd + b</h3>
<p>關閉左側資料夾目錄，讓畫面變得更寬敞。<br>這是我非常使用的一個快捷鍵，可以讓編輯的區域變得更大。</p>
<p><img src="http://i.imgur.com/IiAhOPx.gif" alt=""></p>
<h3 id="3-_cmd_+_shift_+_control_+_f">3. cmd + shift + control + f</h3>
<p>進入zen狀態，單份文件變成全螢幕，且左邊會自動縮排。<br>使用情境：當不常需要切換檔案時，此模式可以專注在單一檔案上，打這篇blog時我便這樣使用。<br>建議：快捷鍵不好記，可以點選<code>View --&gt; Enter Distraction Free Mode</code></p>
<p><img src="http://i.imgur.com/DdD24a5.png" alt="zen"></p>
<h2 id="選取">選取</h2>
<p>底下介紹的部份，回到sublime text編輯器本身，因為重點在編輯部分，因此在此將「選取」特別整理成一區。</p>
<h3 id="1-_cmd_+_d_(可連按)">1. cmd + d (可連按)</h3>
<p>快速選取一範圍內的字串，<code>連按d</code>的話會選取整份文件內相同的字串。<br>當選取完後，可以直接打字，因此就可以將整份文件的字串全部改成新字串。</p>
<p><img src="http://i.imgur.com/tkjccVA.gif" alt=""></p>
<h3 id="2-_cmd_+_l_(可連按)">2. cmd + l (可連按)</h3>
<p>選取游標在內的一行，<code>連按l</code>的話會往下選取下面的行數。</p>
<h3 id="3-_cmd_+_shift_+_l">3. cmd + shift + l</h3>
<p>此功能常與上述<code>cmd + l</code>配合，當選取多行後，按下<code>cmd + shift + l</code>，則會在多行的情況結尾出現游標，可以做多行編輯。<br><img src="http://i.imgur.com/t6Mvfof.gif" alt=""></p>
<h3 id="4-_option_+_滑鼠拖拉">4. option + 滑鼠拖拉</h3>
<p>當按住<code>option</code>後，搭配<code>滑鼠拖拉</code>便可以一次選取多行，並且產生游標。<br><em>注意：拖曳的時候，滑鼠必須是由上到下垂直的選取狀態</em></p>
<p><img src="http://i.imgur.com/4cyN5eD.gif" alt=""></p>
<h3 id="5-_cmd_+_滑鼠點選">5. cmd + 滑鼠點選</h3>
<p>按住<code>cmd</code>後，利用滑鼠在文件內點選，便可以在任何位置新增游標，產生多選狀態做編輯。</p>
<p><img src="http://i.imgur.com/ltNQcxi.gif" alt=""></p>
<h3 id="6-_cmd_+_左_或_右">6. cmd + 左 或 右</h3>
<p>讓你的游標可以快速的回到該行的最前面或是最後面。</p>
<p><img src="http://i.imgur.com/WXyhkDE.gif" alt=""></p>
<h3 id="7-_shift_+_左_或_右">7. shift + 左 或 右</h3>
<p>每按一次會選擇一個字元，可以更加精準的選取自己要的部份。</p>
<p><img src="http://i.imgur.com/yPeO2UF.gif" alt=""></p>
<h3 id="8-_cmd_+_shift_+_左_或_右">8. cmd + shift + 左 或 右</h3>
<p>從游標所在處，往前選取或者往後選取該行到底。</p>
<p><img src="http://i.imgur.com/RX0XyMh.gif" alt=""></p>
<h2 id="尋找">尋找</h2>
<p>在sublime裡面尋找的功能做的非常強大，不論是文件內、或是文件名稱都可以快速找到。<br>底下將會利用GoTo Anything這個強大的內建功能來實作。</p>
<h3 id="1-_cmd_+_p_+_輸入檔名">1. cmd + p + 輸入檔名</h3>
<p>利用<code>cmd + p</code>，之後等視窗出現後，即可輸入你要找的檔名，按下enter即可開啟。</p>
<p><img src="http://i.imgur.com/eH0Lbiu.gif" alt=""></p>
<h3 id="2-_cmd_+_p_+_“:”_+_行數">2. cmd + p + “:” + 行數</h3>
<p>此功能相同於<code>control + g</code>，可以快速的跳到你指定的行數。</p>
<p><img src="http://i.imgur.com/cIp5SYH.gif" alt=""></p>
<h3 id="3-_cmd_+_p_+_“@”_+_function_name">3. cmd + p + “@” + function name</h3>
<p>此功能相同於<code>cmd + r</code>，可以快速跳到定義的function<br>建議：若是知道要找function，建議使用這個而非使用<code>cmd + f</code></p>
<p><img src="http://i.imgur.com/IGdokvK.gif" alt=""></p>
<h3 id="4-_cmd_+_p_+_“#”_+_keyword">4. cmd + p + “#” + keyword</h3>
<p>此功能可以快速找到文件內的關鍵字。<br>個人比較少用這個功能，利用<code>cmd + f</code>時，可以持續按enter找到目標。</p>
<h3 id="5-_cmd_+_shift_+_f">5. cmd + shift + f</h3>
<p>全文搜尋，可以找出「整個project」內的關鍵字。<br>在Find Result內，點選兩下，便可以跳到該文件，這是我覺得最實用的部份。</p>
<p><img src="http://i.imgur.com/RYZ0GOQ.gif" alt=""></p>
<h2 id="快還要更快">快還要更快</h2>
<h3 id="1-_cmd_+_control_+_上_或_下">1. cmd + control + 上 或 下</h3>
<p>將選取起來的行，整段往上或往下移動。<br>使用情境：當幾行code需要移動不算太大範圍的時候，可以使用這個快捷鍵，而不用剪下再貼上。</p>
<p><img src="http://i.imgur.com/R3jxRrV.gif" alt=""></p>
<h3 id="2-_cmd_+_/">2. cmd + /</h3>
<p>將該行註解。<br>個人建議：搭配<code>cmd + l(連按)</code>可以選取多行，一次註解起來。</p>
<p><img src="http://i.imgur.com/B85owMN.gif" alt=""></p>
<h2 id="reference">reference</h2>
<ol>
<li><a href="https://blog.generalassemb.ly/sublime-text-3-tips-tricks-shortcuts/" target="_blank" rel="external">GETTING STARTED WITH SUBLIME TEXT 3: 25 TIPS, TRICKS, AND SHORTCUTS</a></li>
<li><a href="http://zh.lucida.me/blog/sublime-text-complete-guide/" target="_blank" rel="external">Sublime Text 全程指南</a></li>
</ol>
]]></content>
    <category scheme="http://code.kpman.cc/tags/sublime-text-3/" term="sublime text 3"/>
    <category scheme="http://code.kpman.cc/tags/sublime-text/" term="sublime text"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Nginx remove .html filename]]></title>
    <link href="http://code.kpman.cc/2014/09/23/nginx-移除-html-附檔名/"/>
    <id>http://code.kpman.cc/2014/09/23/nginx-移除-html-附檔名/</id>
    <published>2014-09-23T02:10:56.000Z</published>
    <updated>2014-09-23T03:06:04.000Z</updated>
    <content type="html"><![CDATA[<p>Nginx是一套輕量化的web server，因為它的輕量、高效能而越來越多人喜歡使用它來做為網頁伺服器或是反向代理伺服器，本篇將介紹靜態網頁在nginx上移除.html附檔名的作法。</p>
<p><img src="http://upload.wikimedia.org/wikipedia/commons/c/c5/Nginx_logo.svg" alt="Nginx"></p>
<a id="more"></a>
<h3 id="一、Start">一、Start</h3>
<p>本篇要做nginx這套web server的設定檔更改，來達到雖然存取靜態頁面，卻可以利用mydomain.com/user 的URL來拿到所要的靜態頁面。</p>
<blockquote>
<p>其實是我單純是因為不想要看到.html這樣的附檔名，這看起來不專業！</p>
</blockquote>
<p><em>本篇環境為ubuntu14.04下執行。</em></p>
<h3 id="二、Static_file_permission">二、Static file permission</h3>
<p>在nginx下，你要將靜態檔案放在server哪邊都可以，在此我根據之前apache習慣的設定，放在/var/www</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /var</div><div class="line"><span class="built_in">sudo</span> mkdir www</div><div class="line"><span class="built_in">sudo</span> chown -R www-data:www-data /var/www/mydomain.com</div><div class="line"><span class="built_in">sudo</span> chmod <span class="number">755</span> /var/www</div></pre></td></tr></table></figure>

<p>如此一來你便可以將整個靜態網站檔案放在/var/www/mydomain.com目錄底下。</p>
<h3 id="三、Nginx_conf_setting">三、Nginx conf setting</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /etc/nginx/sites-enabled</div><div class="line">sudo <span class="keyword">vim</span> mydomain.<span class="keyword">com</span></div></pre></td></tr></table></figure>

<p>修改底下內容為你要的設定</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="title">server</span> {</div><div class="line">  <span class="title">listen</span>        <span class="number">80</span>;</div><div class="line">  <span class="title">root</span>          /var/www/mydomain;</div><div class="line">  <span class="title">index</span>         index.html index.htm;</div><div class="line">  <span class="title">server_name</span>   mydomain;</div><div class="line">  <span class="title">location</span> / {</div><div class="line">    <span class="title">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ <span class="variable">$uri</span>.html;</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>此設定將會當抓到$uri時，nginx會自動帶入<code>$uri/</code>或是<code>$uri.html</code><br>因此我們送出<code>mydomain.com/user</code>，nginx會試著搜尋<code>mydomain.com/user/</code>或<code>mydomain.com/user.html</code>。</p>
<h3 id="四、Remove_default_conf">四、Remove default conf</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo rm <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-enabled/</span><span class="keyword">default</span></div></pre></td></tr></table></figure>

<p>在我設定的時候，需把default刪除後，才可以正常的讀取到新設定的mydomain.com檔，歡迎各位先進補充這點。</p>
<h3 id="五、Restart_Nginx">五、Restart Nginx</h3>
<p><code>/etc/init.d/nginx restart</code> || <code>sudo service nginx restart</code></p>
<p>如此一來你便可以利用<code>mydomain.com/user</code>純取到相關的靜態頁面了！</p>
<p><strong>reference</strong></p>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-virtual-hosts-server-blocks-on-ubuntu-12-04-lts--3" target="_blank" rel="external">How To Set Up nginx Virtual Hosts (Server Blocks) on Ubuntu 12.04 LTS</a></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/nodejs/" term="nodejs"/>
    <category scheme="http://code.kpman.cc/tags/nginx/" term="nginx"/>
    <category scheme="http://code.kpman.cc/tags/static-file/" term="static file"/>
    <category scheme="http://code.kpman.cc/tags/server/" term="server"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[為你的mac終端機加上alias]]></title>
    <link href="http://code.kpman.cc/2014/04/15/為你的mac終端機加上alias/"/>
    <id>http://code.kpman.cc/2014/04/15/為你的mac終端機加上alias/</id>
    <published>2014-04-15T01:35:37.000Z</published>
    <updated>2014-04-15T02:05:13.000Z</updated>
    <content type="html"><![CDATA[<p>在使用iTerm（終端機）一段時間後，總覺得每次開啟新分頁，要進入到一個很深的資料夾略顯麻煩，因此上網查了簡易的方法，很快速便可以讓自己少打很多code，把時間花在其他更重要事情上。</p>
<p><img src="http://i.imgur.com/Cc5u0nY.png" alt="iterm2"></p>
<a id="more"></a>
<h2 id="alias">alias</h2>
<p>顧名思義就是別名，其語法如下，舉mac的apache server所在為example:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alias</span> goproject=<span class="attribute">'cd</span> /<span class="keyword">Library</span>/WebServer/Documents/yourproject'</div></pre></td></tr></table></figure>

<p>因此在iTerm打上這串後，未來便可以使用<code>goproject</code> 直接執行後面那串，快速又方便。</p>
<h2 id="永久執行alias">永久執行alias</h2>
<p>在設定完alias，原本以為就這樣，結果發現如果重開iTerm後，之前設定的alias都不見了，原因是因為沒有真正寫入bash檔，因此在開啟iTerm的時候，並沒有被載入，所以我們要將</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo vim <span class="regexp">/etc/</span>bashrc</div><div class="line"><span class="comment">// 在bashrc檔裡面加上新的一行</span></div><div class="line">alias goproject=<span class="string">'cd /Library/WebServer/Documents/yourproject'</span></div></pre></td></tr></table></figure>

<p><em>ps. 因為是root權限，存檔的時候記得要用<code>:wq!</code>強制寫入。</em></p>
<p>重新開啟iTerm後，便可以使用goproject來快速進到你要的路徑，當然你也可以自行設定你要的指令。</p>
<h2 id="alias_相關指令">alias 相關指令</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span><span class="comment"> // 列出所有的alias檔</span></div><div class="line">unalias goproject<span class="comment"> // 把goproject這個alias刪掉</span></div></pre></td></tr></table></figure>

<p><strong><em>reference</em></strong></p>
<p><a href="http://www.linfo.org/alias.html" target="_blank" rel="external">How to use the alias command</a></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/alias/" term="alias"/>
    <category scheme="http://code.kpman.cc/tags/terminal/" term="terminal"/>
    <category scheme="http://code.kpman.cc/tags/mac/" term="mac"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Web好UI設計法則 2]]></title>
    <link href="http://code.kpman.cc/2014/04/14/web好ui設計法則-2/"/>
    <id>http://code.kpman.cc/2014/04/14/web好ui設計法則-2/</id>
    <published>2014-04-14T05:26:18.000Z</published>
    <updated>2014-04-14T13:14:10.000Z</updated>
    <content type="html"><![CDATA[<p>本文譯自<a href="http://www.goodui.org" target="_blank" rel="external">goodui</a>，會寫這系列並非逐字翻譯，而是在研讀過後利用自己的方式表達並記錄分享之，全文圖片版權皆為goodui.org所有，此為系列第2篇。</p>
<a id="more"></a>
<h1 id="6、區分已被選取和可點選區塊">6、區分已被選取和可點選區塊</h1>
<p>利用顏色、深度、對比來讓使用者確切的知道他們現在處於網站的哪一個地方，了解什麼地方可以點選，以便讓他們往下繼續逛他們趕興趣的頁面或內容。頁面上可見的文字區塊大致分成三種情況，分別是可以點(clickable)連結或按鈕、被選取(chosen)項目以及其他文字(plain text)。</p>
<p>底下這張圖示指出，藍色的字代表可以點擊(clickable)，而黑色的字代表你現在正在這個項目(chosen)內，簡單清楚的表達出區分的效果。</p>
<p><img src="http://goodui.org/images/idea006.png" alt="idea006"></p>
<h1 id="7、試著推薦而非列出都一樣的選項">7、試著推薦而非列出都一樣的選項</h1>
<p>當你有多重選項的時候，有一個強調的選項或許對於使用者來說是一個不錯的刺激。</p>
<p>在這篇<a href="http://www.nytimes.com/2010/02/27/your-money/27shortcuts.html?_r=1&amp;" target="_blank" rel="external">心理學研究</a>指出，越少的選項可以讓使用者決定得更快，因此，試著強調某個特定的訴求吧！</p>
<p><img src="http://goodui.org/images/idea007.png" alt="idea007"></p>
<h1 id="8、試著用undo選項，而非確認">8、試著用undo選項，而非確認</h1>
<p>在你要刪除一個動作的時候，如果視窗一直跳出「您確定要刪除嗎？」的訊息，還要你多按一個按鍵才能確定刪除，是不是有點惱人？</p>
<p>原作者提到他相信大多情況我們都不會誤按功能按鈕，有的話也是少數，因此利用重作(undo)的功能而非要使用者一直確認，如此一來能讓使用者更加有掌握感，當他們要進行大量的刪除動作，便可以提高效率，不小心誤刪的情況發生，還有重作的選項可以復原。</p>
<p><img src="http://goodui.org/images/idea008.png" alt="idea008"></p>
<h1 id="9、你的TA是特定族群，而非全部人">9、你的TA是特定族群，而非全部人</h1>
<p>這是一個決策，純看你要針對某特定的族群或是針對全部人，有利有弊是一定的。當你針對某特定族群打廣告，勢必會壓縮到其他的群眾，進而產生排他性。這種策略的風險是你可能會削減自己短期和限制潛在的客戶。</p>
<p><img src="http://goodui.org/images/idea009.png" alt="idea009"></p>
<h1 id="10、給明確的指示">10、給明確的指示</h1>
<p>給使用者明確的指示，讓他們知道點下這一個按鍵或已經滑動到這個頁面的最底端，接下來他該何去何從？千萬不要用那種「或許」、「應該」的字眼造成不確定感。要讓你的使用者知道下一步該怎麼走，至於要不要走，就交給使用者自己去決定了。</p>
<p><img src="http://goodui.org/images/idea010.png" alt="idea010"></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/goodui/" term="goodui"/>
    <category scheme="http://code.kpman.cc/tags/UI/" term="UI"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Nginx with Node.js in different port]]></title>
    <link href="http://code.kpman.cc/2014/04/11/nginx-with-nodejs-in-different-port/"/>
    <id>http://code.kpman.cc/2014/04/11/nginx-with-nodejs-in-different-port/</id>
    <published>2014-04-10T16:16:33.000Z</published>
    <updated>2014-04-10T16:57:25.000Z</updated>
    <content type="html"><![CDATA[<p>Nginx因為它的輕量、高效能而越來越多人喜歡使用它來做為網頁伺服器或是反向代理伺服器。</p>
<p>由於近期想要把不同的node.js程式放在同一個server，因此開始研究nginx用法，記錄下來我的實作方式。</p>
<p><img src="http://upload.wikimedia.org/wikipedia/commons/c/c5/Nginx_logo.svg" alt="Nginx"></p>
<a id="more"></a>
<h3 id="一、Domain指向主機">一、Domain指向主機</h3>
<p>將不同的domain都指向你的主機ip，此時都會指向HTTP預設的80 port，後面再用nginx設定由不同的port去處理不同的node.js程式。</p>
<h3 id="二、安裝Nginx_in_Ubuntu">二、安裝Nginx in Ubuntu</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get <span class="operator"><span class="keyword">update</span></span></div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">upgrade</span> // 確定抓到套件</div><div class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> nginx</div><div class="line">sudo service nginx <span class="keyword">start</span></div></pre></td></tr></table></figure>

<p>在安裝的時候，記得你如果有其他server在run必須要停掉，不然佔住80 port是沒有辦法裝成功nginx的。</p>
<h3 id="三、將Node-js設定不同port">三、將Node.js設定不同port</h3>
<p>會寫node.js應該會將port listen在不同的port，注意不要用常用的那些port即可。例如：80(HTTP)、22(SSH)。</p>
<h3 id="四、設定Nginx資料夾檔案">四、設定Nginx資料夾檔案</h3>
<p>進到<code>/etc/nginx/sites-enabled</code>，然後創建跟你domain一樣的檔案，記得權限要用<code>sudo</code>去創</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo <span class="keyword">vim</span> domain1.<span class="keyword">com</span></div></pre></td></tr></table></figure>

<p>檔案內容</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="title">server</span> {</div><div class="line">    <span class="title">listen</span> <span class="number">80</span>;</div><div class="line">    <span class="title">server_name</span> domain1.com;</div><div class="line">    <span class="title">access_log</span> /var/log/nginx/domain1.access.log;</div><div class="line">    <span class="title">location</span> / {</div><div class="line">        <span class="title">proxy_pass</span>    <span class="url">http://127.0.0.1:4000/</span>;</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>

<p>同理創建domain2.com，記得4000 port要改成你設定的port。</p>
<h3 id="五、重啟Nginx">五、重啟Nginx</h3>
<p><code>/etc/init.d/nginx restart</code></p>
<p>記得做過更動後，要重新啟動nginx才有用。<br>如此一來，不同的domain就可以連到同一台server的不同支node.js去執行了。</p>
<p><strong>reference</strong></p>
<p><a href="http://stackoverflow.com/questions/5009324/node-js-nginx-and-now/5015178#5015178" target="_blank" rel="external">node.js + nginx - And now?</a><br><a href="http://zh.wikipedia.org/wiki/Nginx" target="_blank" rel="external">wikipedia nginx</a></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/nodejs/" term="nodejs"/>
    <category scheme="http://code.kpman.cc/tags/nginx/" term="nginx"/>
    <category scheme="http://code.kpman.cc/tags/server/" term="server"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[CI初體驗for靜態頁面]]></title>
    <link href="http://code.kpman.cc/2014/04/06/ci初體驗for靜態頁面/"/>
    <id>http://code.kpman.cc/2014/04/06/ci初體驗for靜態頁面/</id>
    <published>2014-04-06T13:30:35.000Z</published>
    <updated>2014-04-06T16:13:14.000Z</updated>
    <content type="html"><![CDATA[<p>第一次因為專案需要，而跟PHP後端工程師配合，我們選定了<a href="http://www.codeigniter.org.tw/" target="_blank" rel="external">CI</a>這套framework來使用，對於CI算是第一次接觸，因此想把從無到有的架設過程給記錄下來。</p>
<p><img src="http://php.quicoto.com/wp-content/uploads/2013/07/codeigniter-logo.png" alt="codeigniter"></p>
<a id="more"></a>
<h2 id="1、擁有php環境">1、擁有php環境</h2>
<p>Mac內建Apache，只要打開即可。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apachectl start</div></pre></td></tr></table></figure>

<h2 id="2、安裝CI">2、安裝CI</h2>
<ul>
<li>到<a href="http://www.codeigniter.org.tw/user_guide/installation/downloads.html" target="_blank" rel="external">官網</a>下載整份文件檔</li>
<li>放進server的路徑下 <code>/Libary/WebServer/Documents/</code></li>
<li>安裝完畢！</li>
</ul>
<h2 id="3、讀取靜態頁面">3、讀取靜態頁面</h2>
<h3 id="新增頁面">新增頁面</h3>
<p>此處新增名為page.php的檔案 <code>application -&gt; view -&gt; cep(optional dir) -&gt; page.php</code></p>
<ul>
<li><img src="http://i.imgur.com/gC7kgs2.png" alt="page.php"></li>
</ul>
<h3 id="新增static_files">新增static files</h3>
<p>如CSS、JS檔，習慣性會創建assets資料夾將他們放進去，並且放在跟application同階層的dir內，如圖。<br><img src="http://i.imgur.com/BLh0okD.png" alt="assets"></p>
<h3 id="新增route">新增route</h3>
<p><code>application -&gt; config -&gt; routes.php</code> 新增如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$route</span>[<span class="string">'(:any)'</span>] = <span class="string">'cep/$1'</span>;</div><div class="line"><span class="variable">$route</span>[<span class="string">'default_controller'</span>] = <span class="string">"cep"</span>;</div><div class="line"><span class="variable">$route</span>[<span class="string">'404_override'</span>] = <span class="string">''</span>;</div></pre></td></tr></table></figure>

<h3 id="新增controller">新增controller</h3>
<p>在controllers資料夾內，新增php檔，內定新的public function，參照welcome.php修改即可。</p>
<p>新增一個class extends CI_Controller，裡面加上page()這個public function。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cep</span> <span class="keyword">extends</span> <span class="title">CI_Controller</span> </span>{</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line">    {</div><div class="line">        <span class="variable">$this</span><span class="variable">-&gt;load</span><span class="variable">-&gt;view</span>(<span class="string">'cep/index'</span>);</div><div class="line">    }</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">page</span><span class="params">()</span></span></div><div class="line">    {</div><div class="line">        <span class="variable">$this</span><span class="variable">-&gt;load</span><span class="variable">-&gt;view</span>(<span class="string">'cep/page'</span>);</div><div class="line">    }</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="路徑修改">路徑修改</h3>
<ul>
<li>application -&gt; config -&gt; config.php 改一行 <code>$config[&#39;base_url&#39;]  = &#39;/專案資料夾名字/&#39;;</code></li>
<li>application -&gt; config -&gt; autoload.php 改一行 <code>$autoload[&#39;helper&#39;] = array(&#39;url&#39;);</code> 原本是沒有url，加上url。</li>
<li>page.php這頁的CSS和JS檔，修改成</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"&lt;?php echo base_url(); ?&gt;assets/css/bootstrap.min.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"&lt;?php echo base_url(); ?&gt;assets/css/main.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"&lt;?php echo base_url(); ?&gt;assets/js/vendor/modernizr-2.6.2.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div></pre></td></tr></table></figure>

<p>如此一來便可以在<code>http://localhost/專案資料夾/index.php/page</code> 看到靜態頁面了。</p>
<h2 id="4、移除CI_URL上的index-php">4、移除CI URL上的index.php</h2>
<p>因為每次網址上面都需要有index.php，覺得不好看，因此兩個步驟把它改掉。</p>
<ol>
<li>在root加上<code>.htaccess</code>檔，內容如下</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword"><span class="common">RewriteEngine</span></span> <span class="literal">on</span></div><div class="line"><span class="keyword"><span class="common">RewriteCond</span></span> <span class="number">$1</span> !^(index\.php)</div><div class="line"><span class="keyword"><span class="common">RewriteCond</span></span> <span class="cbracket">%{REQUEST_FILENAME}</span> !-f</div><div class="line"><span class="keyword"><span class="common">RewriteCond</span></span> <span class="cbracket">%{REQUEST_FILENAME}</span> !-d</div><div class="line"><span class="keyword"><span class="common">RewriteRule</span></span> ^(.*)$ index.php/<span class="number">$1</span><span class="sqbracket"> [L,QSA]</span></div></pre></td></tr></table></figure>

<ol>
<li>修改apache設定，將httpd.conf改掉。<br>原本AllowOverride none改成All即可。</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">Directory</span> /Library/WebServer/Documents&gt;</div><div class="line">    <span class="keyword">Options</span> FollowSymLinks</div><div class="line">    AllowOverride <span class="keyword">All</span></div><div class="line">&lt;/<span class="keyword">Directory</span>&gt;</div></pre></td></tr></table></figure>

<ol>
<li>重新啟動apache <code>sudo apachectl restart</code></li>
</ol>
<p><em>後記</em></p>
<p>因尚有其他專案，故本專案檔是全部在一個資料夾內，非直接在web server的root實作。</p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/PHP/" term="PHP"/>
    <category scheme="http://code.kpman.cc/tags/CI/" term="CI"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Web好UI設計法則 1]]></title>
    <link href="http://code.kpman.cc/2014/03/19/web好ui設計法則-1/"/>
    <id>http://code.kpman.cc/2014/03/19/web好ui設計法則-1/</id>
    <published>2014-03-19T09:11:15.000Z</published>
    <updated>2014-03-19T10:11:46.000Z</updated>
    <content type="html"><![CDATA[<p>本文譯自<a href="http://goodui.org" target="_blank" rel="external">goodui</a>，會寫這系列並非逐字翻譯，而是在研讀過後利用自己的方式表達並記錄分享之，全文圖片版權皆為goodui.org所有。</p>
<p><img src="http://i.imgur.com/ve2iCpO.png" alt="goodui"></p>
<a id="more"></a>
<h2 id="1、頁面單欄式而非多欄式">1、頁面單欄式而非多欄式</h2>
<p>採用單欄式的好處是可以讓讀者自然而然的了解閱讀方向為由上而下，採用多欄式的頁面設計，會有額外增加的risk，會讓讀者容易分心。在文章（頁面）的最後採用call to action，引導讀者點進你想要的導向頁面。</p>
<p><img src="http://goodui.org/images/idea001.png" alt="idea001"></p>
<h2 id="2、試著給些小禮物">2、試著給些小禮物</h2>
<p>好朋友間互相送禮，是很正常不過的對吧？在面對你的使用者也是一樣的，根據互惠原則，給禮物是一個激勵使用者的手法，讓使用者會更願意回來你的網站。</p>
<p><img src="http://goodui.org/images/idea002.png" alt="idea002"></p>
<h2 id="3、把相似功能的介面合併在一起">3、把相似功能的介面合併在一起</h2>
<p>在過去，我們很容易將功能差不多的介面，在頁面上分成好多部分。當你的UI越分散，那麼該網站的使用者其學習曲線便越高，試著重新設計你的UI吧，把那些功能相近的按鈕、區塊放在一起。</p>
<p><img src="http://goodui.org/images/idea003.png" alt="idea003"></p>
<h2 id="4、讓別人來說，而非自己說">4、讓別人來說，而非自己說</h2>
<p>列出那些曾經在social media討論本身產品的人，利用他們的見證會比自己在網站上面寫還來的有用。「Our customers say」會比「We are awesome」還更具有說服力。</p>
<p><img src="http://goodui.org/images/idea004.png" alt="idea004"></p>
<h2 id="5、重複你的主要訴求">5、重複你的主要訴求</h2>
<p>你的call to action是網頁中重要的項目，尤其在很長的頁面時，不要吝嗇讓它出現超過一次。當使用者滑到頁面底端時，是該他們做決定的時候了，離開或是完成你的主要訴求。</p>
<p><img src="http://goodui.org/images/idea005.png" alt="idea005"></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/goodui/" term="goodui"/>
    <category scheme="http://code.kpman.cc/tags/UI/" term="UI"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Sublime Text 2 實用套件]]></title>
    <link href="http://code.kpman.cc/2013/11/30/sublime-text-2-實用套件/"/>
    <id>http://code.kpman.cc/2013/11/30/sublime-text-2-實用套件/</id>
    <published>2013-11-29T16:02:48.000Z</published>
    <updated>2014-03-17T01:43:18.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://upload.wikimedia.org/wikipedia/en/4/4c/Sublime_Text_Logo.png" alt="Sublime Text 2" title="Sublime Text 2"></p>
<p>Sublime Text 2 是網頁開發者都不陌生的一套編輯器，除了單純的文字編輯外，它還有很多實用的套件，這篇來介紹我平常常用的Sublime Text 2 套件。</p>
<a id="more"></a>
<h2 id="編輯環境">編輯環境</h2>
<ol>
<li>Mac 10.9</li>
<li>Sublime Text 2</li>
</ol>
<p>Mac環境，所以快捷鍵會介紹command的配置，若windows版本請自行查閱。</p>
<h3 id="安裝Package_Control">安裝Package Control</h3>
<p>所謂Package Control就是Sublime Text 2 用來裝套件的，因此在裝其他的套件之前，我們必須先來安裝Package Control。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">開啟Sublime Text <span class="number">2</span></div><div class="line">開啟console，快捷鍵ctrl+`</div><div class="line">貼上以下程式碼</div><div class="line"></div><div class="line">import urllib2,os; pf=<span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> not os.path.<span class="built_in">exists</span>(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); <span class="keyword">open</span>( os.path.<span class="built_in">join</span>( ipp, pf), <span class="string">'wb'</span> ).<span class="keyword">write</span>( urllib2.urlopen( <span class="string">'http://sublime.wbond.net/'</span> +pf.replace( <span class="string">' '</span>,<span class="string">'%20'</span> )).<span class="keyword">read</span>()); <span class="keyword">print</span>( <span class="string">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>

<p>程式碼可以參照<a href="https://sublime.wbond.net/installation#st2" target="_blank" rel="external">官網</a></p>
<p>安裝完後，未來我們就可以使用<code>cmd+shift+p</code>，打入<code>install package</code>，即可啟用Package Control，如下圖</p>
<p><img src="http://i.imgur.com/5n76S9Q.png" alt="install package"></p>
<h3 id="安裝套件步驟">安裝套件步驟</h3>
<ol>
<li>首先<code>cmd+shift+p</code></li>
<li>鍵入<code>install package</code></li>
<li>跳出新的輸入欄位後，在輸入你要的<code>package名稱</code></li>
<li>看著左下角，等它跑完</li>
<li>重新啟動Sublime Text 2 即安裝完成。</li>
</ol>
<h2 id="必裝套件">必裝套件</h2>
<h4 id="一、BracketHighlighter">一、BracketHighlighter</h4>
<p><img src="http://i.imgur.com/2ovEcG8.png" alt=""></p>
<p>這是一套超過196K人裝的套件，如圖所示，寫html常常遇到不知道close tag在哪邊，裡用它可以清楚的將close tag標示出來。<br>另外它有一個很好的地方，就是會在每一行的前面列出來目前的tag，不同的語言還有不同的icon，因此可以更快的知道自己的位置。</p>
<h4 id="二、Emmet">二、Emmet</h4>
<p>以前它叫做Zen coding，現在則改為Emmet。</p>
<p>可以將需要重複的html用很簡短的方式寫出來，例如：</p>
<ol>
<li><code>.container&gt;.col-lg-4*3</code></li>
<li>按下tab後便會出現</li>
<li><img src="http://i.imgur.com/PP9vdmr.png" alt="Emmet"></li>
</ol>
<p>若你發現按下tab後竟然沒有用，記得確定自己是不是在html文件內。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="input"><span class="prompt">view --&gt;</span> syntax --&gt; <span class="constant">HTML</span>(<span class="number">5</span>)</span></div></pre></td></tr></table></figure>

<p>在HTML5的文件下，<code>!+tab</code> 會有出現HTML5的snippet出現，非常好用！</p>
<h4 id="三、Pretty_Json">三、Pretty Json</h4>
<p>有利用到JSON的人，想必一定會為了格式上面的問題而煩惱，只要裝上這個，JSON立刻變得很好看。</p>
<p>裝完之後，把你要修改的JSON選取起來，按下快捷鍵</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cmd+ctrl+<span class="built_in">j</span></div></pre></td></tr></table></figure>

<p>立刻就可以把JSON變得很漂亮，也可以自行進去定義縮排大小。</p>
<h4 id="四、flat_theme">四、flat theme</h4>
<p><img src="http://i.imgur.com/pvxRMlX.png" alt="flatland"></p>
<p>其實這個套件全名是flatland才對，可以把Sublime Text 2的整體環境變得扁平化。</p>
<p>安裝方法：</p>
<ol>
<li>打開Package Control</li>
<li>輸入Theme - Flatland即可</li>
</ol>
<hr>
<p>以上介紹了一些我常用的Sublime Text 2 套件，但一直沒有找到好看的主題，如果你有推薦的主題，非常歡迎交流！</p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/sublime-text-2/" term="sublime text 2"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[wordpress解決permalink固定網址問題]]></title>
    <link href="http://code.kpman.cc/2013/08/22/wordpress解決permalink固定網址問題/"/>
    <id>http://code.kpman.cc/2013/08/22/wordpress解決permalink固定網址問題/</id>
    <published>2013-08-22T04:54:15.000Z</published>
    <updated>2013-08-22T05:00:24.000Z</updated>
    <content type="html"><![CDATA[<p>本case為希望主目錄可以直接連到wordpress，但是wordpress是另外放在一個資料夾。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">主目錄：/<span class="keyword">var</span>/www</div><div class="line">wordpress資料夾：/<span class="keyword">var</span>/www/blog</div></pre></td></tr></table></figure>

<a id="more"></a>
<h2 id="一、-htaccess">一、.htaccess</h2>
<p>wordpress會利用.htaccess去更改固定連結，是位在根目錄，也就是<code>/var/www</code>底下，wordpress會根據你的<code>網站位置URL</code>去設定.htaccess</p>
<p>利用終端機產生.htaccess</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">vi</span> .htaccess</div><div class="line">chmod <span class="number">777</span> .htaccess</div></pre></td></tr></table></figure>

<h2 id="二、進入後台設定固定網址permalink">二、進入後台設定固定網址permalink</h2>
<p>這邊我選擇文章名稱的格式</p>
<p><img src="http://i.imgur.com/XlEgUdT.png" alt="固定網址"></p>
<p>因為剛剛上面有設定.htaccess權限打開到最大，因此進後台設定完，記得把chmod改為644，要注意安全性。</p>
<h2 id="三、設定mod_write">三、設定mod_write</h2>
<p>我的wordpress是架在Amazon EC2上的ubuntu，server是apache2，因此上網搜尋相關資料，解決辦法如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> a2enmod rewrite</div><div class="line"><span class="built_in">sudo</span> /etc/init.d/apache2 restart</div></pre></td></tr></table></figure>

<p>只要兩行就可以解決!</p>
<h3 id="後記"><strong><em>後記</em></strong></h3>
<p>在解決這個問題的時候，找了很多資料，一來是不明白.htacces真正的目錄，二來是不知道ubuntu的rewrite要打開，因此在這邊記錄下來，讓有相同困擾的人可以了解。</p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/wordpress/" term="wordpress"/>
    <category scheme="http://code.kpman.cc/tags/apache2/" term="apache2"/>
    <category scheme="http://code.kpman.cc/tags/htaccess/" term="htaccess"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[EC2利用tasksel架wordpress經驗分享]]></title>
    <link href="http://code.kpman.cc/2013/08/21/ec2利用tasksel架wordpress經驗分享/"/>
    <id>http://code.kpman.cc/2013/08/21/ec2利用tasksel架wordpress經驗分享/</id>
    <published>2013-08-20T18:17:04.000Z</published>
    <updated>2013-08-21T06:48:47.000Z</updated>
    <content type="html"><![CDATA[<p>看了這麼久的雲端資源，總算開了算是自己真正學到東西的第一台Amazon EC2 server，目的是想要練習把wordpress架到EC2上，在此分享我的架設經驗。</p>
<p><img src="http://blog.programmableweb.com/wp-content/amazon-web-services1.png" alt="Amazon web service"></p>
<a id="more"></a>
<h2 id="一、擁有AWS帳號">一、擁有AWS帳號</h2>
<p>關於開啟AWS的過程，實際走過一遍之後，阿正老師的<a href="http://blog.soft.idv.tw/?p=823&amp;page=2" target="_blank" rel="external">這篇</a>，其內寫的不錯，推薦跟著走一遍，就會了解很多。</p>
<h2 id="二、開啟自己的instance">二、開啟自己的instance</h2>
<p>在實際走過後，會發現阿正老師<a href="http://blog.soft.idv.tw/?p=824" target="_blank" rel="external">這篇</a>真的超用心，因此接下來主要會利用這篇，再加上些我的補充。</p>
<ul>
<li>instance地理位置</li>
</ul>
<p>提到將主機開的位置，現在已經有tokyo的據點，離台灣更近，所以建議將instance位置設在tokyo</p>
<blockquote>
<p>建議將instance位置設在tokyo</p>
</blockquote>
<ul>
<li>instance選擇方案</li>
</ul>
<p><img src="http://i.imgur.com/U4rs7wk.png" alt="EC2 ubuntu server for free"></p>
<p>利用VISA卡，選擇免費方案（圖中有星星的都是免費方案），在這邊我選擇ubuntu來做為我的系統。</p>
<ul>
<li>key pair創建＆下載</li>
</ul>
<p>在阿正老師的文章內看到關於key pair介紹，很重要，一定要記住要把下載下來的pem給管理好，未來是需要利用它來做ssh登入主機。</p>
<blockquote>
<p>.pem檔需要存好，一台主機配對一個key pair，且不能做更改，</p>
</blockquote>
<h2 id="三、設定Security_Group">三、設定Security Group</h2>
<p>在沒有設定security group的時候，新開的instance可能是鎖起來的，會有SSH連線上的問題。</p>
<ol>
<li>進入console.aws.amazon.com</li>
<li>左方導覽列選擇security group</li>
<li>選擇instance後，下方的tab選取<code>Inbound</code></li>
<li>分別加入<code>SSH</code>&amp;<code>HTTP</code>，Source部分都維持0.0.0.0/0即可，加入後記得要按<code>Apply Rule Change</code>才生效</li>
</ol>
<blockquote>
<p>記得開啟SSH(20)、HTTP(80)</p>
</blockquote>
<h2 id="四、申請Elastic_IP">四、申請Elastic IP</h2>
<p>每一個instance都應該要綁定一個elastice ip，未來可以作為連線使用。</p>
<ol>
<li>同上，進入console.aws.amazon.com</li>
<li>選擇Elastic IPs</li>
<li>選擇Allocate New Address</li>
<li>申請完之後記得要associate到你的instance </li>
</ol>
<blockquote>
<p>申請完elastic ip後，原本的Public domain前半部分會改變為新的ip</p>
</blockquote>
<p><strong><em>* 其實我在實作時，是先做了SSH連線，後來在去申請elastic ip，結果associate完後，我又要ssh連線，發現沒有辦法登入，之後才瞭解是做了elastic ip後，連線的ip也需要一並跟著改變。</em></strong></p>
<h2 id="五、SSH連線進入自己的instance">五、SSH連線進入自己的instance</h2>
<ol>
<li>打開終端機（推薦iterm）</li>
<li><code>chmod 600 ~/.pem</code><br>要記得把.pem檔改權限，不然會登不進去</li>
<li>ssh連線使用以下command line<br><code>ssh -i ~/.pem ubuntu@ip</code><ul>
<li><code>~/.pem</code>是此instance的key pair .pem檔的路徑</li>
<li><code>ubuntu</code>是因為我用ubuntu當做OS，如果當初選擇Amazon linux的話，則需要輸入<code>ec2-user</code>取代ubuntu</li>
<li><code>ip</code>則為instance的ip，進到console，左側選instance，拉到底下看見<br><code>Public DNS: ec2-xx-xxx-xxx-xx.ap-northeast-1.compute.amazonaws.com</code><br>則xx-xxx-xxx-xx改成<code>xx.xxx.xxx.xx</code>即為你的連線ip</li>
</ul>
</li>
<li>連線成功會看到<code>ubuntu@ip-xxx-xxx-xxx-xxx:~$</code>字眼！那就恭喜了！</li>
</ol>
<blockquote>
<p>pem檔的權限要更改為600</p>
</blockquote>
<h2 id="六、環境設定">六、環境設定</h2>
<p>剛進到instance，記得將環境設定一下</p>
<ol>
<li><code>sudo apt-get update</code> + <code>sudo apt-get upgrade</code></li>
<li>如果覺得一直sudo很麻煩，可以利用<code>sudo su</code>取得root權限</li>
</ol>
<hr>
<h3 id="#_安裝tasksel"># 安裝tasksel</h3>
<ol>
<li>是ubuntu底下的lamp懶人包</li>
<li>推薦<a href="http://howtounix.info/howto/LAMP-on-Ubuntu-with-tasksel-tool" target="_blank" rel="external">教學文</a></li>
<li>開始安裝taskel   <code>sudo apt-get install tasksel</code></li>
<li>安裝lamp-server   <code>sudo tasksel install lamp-server</code></li>
</ol>
<h3 id="#_安裝phpmyadmin"># 安裝phpmyadmin</h3>
<ol>
<li><code>sudo apt-get install phpmyadmin</code></li>
<li><a href="http://linadonis.pixnet.net/blog/post/27585552-ubuntu-server-%E5%AE%89%E8%A3%9D-phpmyadmin" target="_blank" rel="external">reference</a></li>
</ol>
<h3 id="#_安裝wordpress"># 安裝wordpress</h3>
<p><img src="http://wow-wp.org/wp-content/uploads/2011/10/wordpress.png" alt="wordpress"></p>
<ol>
<li><a href="https://www.digitalocean.com/community/articles/how-to-install-wordpress-on-ubuntu-12-04" target="_blank" rel="external">超棒教學文</a> 我是跟著文章走，裡面紅色的字記得改成自己的</li>
</ol>
<ul>
<li>cd /var/www</li>
<li>下載wordpress包<br><code>wget http://wordpress.org/latest.tar.gz</code>   </li>
<li>解壓縮<br><code>tar -xzvf latest.tar.gz</code></li>
<li>進到mysql mode<br><code>mysql -u root -p</code></li>
<li>剩下有紅字，推薦看連結XD</li>
</ul>
<h2 id="七、測試連線">七、測試連線</h2>
<p>當你安裝完後，事實上可以利用public domain來連線看看<br>直接在console裡面找到instance的public domian，連線看看是否成功</p>
<ol>
<li><code>cd /var/www</code> </li>
<li><code>sudo vi test.php</code> 創新php檔案，並進到vim模式</li>
<li>按<code>i</code> 進入編輯模式，記得看下面是否出現<code>-- INSERT --</code></li>
<li>打上這一行<code>&lt;?php phpinfo(); ?&gt;</code></li>
<li>按下esc -&gt; 打入<code>:wq</code> -&gt; enter存檔(記得是看iterm下面)</li>
<li>利用public domain/test.php連線測試，看到php的資訊就成功了！</li>
<li>public domain/wordpress 也可以看見你的wordpress有沒有架成功！</li>
</ol>
<h2 id="IP連接instance">IP連接instance</h2>
<p>如果你有自己的ip，想要指到EC2的話，按照下面作法。</p>
<ol>
<li>到godday的DNS manager</li>
</ol>
<ul>
<li>設定你的IP的<code>A record</code></li>
<li>指向instance的<code>Elastic IP</code>即可</li>
</ul>
<p><strong><em>reference</em></strong></p>
<ul>
<li><a href="http://blog.soft.idv.tw/?p=823&amp;page=2" target="_blank" rel="external">阿正老師上篇</a> 阿正老師這兩篇必讀</li>
<li><a href="http://blog.soft.idv.tw/?p=824" target="_blank" rel="external">阿正老師下篇</a> 主機實戰篇</li>
<li><a href="http://blog.rx836.tw/blog/first-amazon-web-services/" target="_blank" rel="external">免費玩Amazon Web Service(AWS) EC2</a> 開機器寫的很詳細，圖文並茂</li>
<li><a href="http://coenraets.org/blog/2012/01/setting-up-wordpress-on-amazon-ec2-in-5-minutes/" target="_blank" rel="external">Setting Up WordPress on Amazon EC2 in 5 minutes</a> 根本神教學，我是受這篇感動才想要把自己的過程給記錄下來。</li>
<li><a href="http://linadonis.pixnet.net/blog/post/27585552-ubuntu-server-%E5%AE%89%E8%A3%9D-phpmyadmin" target="_blank" rel="external">Ubuntu Server 安裝 Phpmyadmin</a> phpmyadmin圖文教學</li>
<li><a href="http://codex.wordpress.org/Giving_WordPress_Its_Own_Directory" target="_blank" rel="external">Giving WordPress Its Own Directory</a> 更換wordpress的路徑位置指向</li>
</ul>
<blockquote>
<p>如果有問題，或者我有寫錯的地方，歡迎留言讓我知道！</p>
</blockquote>
]]></content>
    <category scheme="http://code.kpman.cc/tags/wordpress/" term="wordpress"/>
    <category scheme="http://code.kpman.cc/tags/Amazon/" term="Amazon"/>
    <category scheme="http://code.kpman.cc/tags/EC2/" term="EC2"/>
    <category scheme="http://code.kpman.cc/tags/tasksel/" term="tasksel"/>
    <category scheme="http://code.kpman.cc/tags/ubuntu/" term="ubuntu"/>
    <category scheme="http://code.kpman.cc/tags/AWS/" term="AWS"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Sublime Text 2 實用技巧]]></title>
    <link href="http://code.kpman.cc/2013/06/05/sublime-text-2-實用技巧/"/>
    <id>http://code.kpman.cc/2013/06/05/sublime-text-2-實用技巧/</id>
    <published>2013-06-05T04:53:10.000Z</published>
    <updated>2013-06-05T16:41:38.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://upload.wikimedia.org/wikipedia/en/4/4c/Sublime_Text_Logo.png" alt="Sublime Text 2" title="Sublime Text 2"></p>
<p>Sublime Text 2 是一套越來越火紅的編輯器，如果你是接觸網頁開發，想必對於這套軟體不陌生，以下分享幾個好用的技巧，都是我自己平常比較常使用的技巧，因為我本身是一個懶得看文件的人，所以就整理這篇與大家分享。</p>
<a id="more"></a>
<h2 id="編輯環境">編輯環境</h2>
<ol>
<li>Mac 10.7.5</li>
<li>Sublime Text 2</li>
</ol>
<p>我是使用mac，所以快捷鍵就會是command的配置。</p>
<h2 id="技巧介紹">技巧介紹</h2>
<h3 id="一、Set_Syntax">一、Set Syntax</h3>
<p>有發現你的Sublime Text 2右下角有你正在編輯的環境語言嗎？舉凡JAVA、CSS、HTML5等<br>比如說我現在要從HTML5切到CSS介面，除了由上方的View-&gt;Sytax切換外，可以利用快捷鍵   </p>
<p>切換到CSS範例：   </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shift+<span class="command"><span class="keyword">command</span>+<span class="title">p</span></span></div><div class="line">鍵入sscss</div></pre></td></tr></table></figure>



<p><img src="http://i.imgur.com/51PUAhD.png" alt="Set Syntax" title="Set Syntax"></p>
<p>每一個Color Scheme都會針對不同的語言去做優化，因此值得學習。</p>
<h3 id="二、HTML5_snippet">二、HTML5 snippet</h3>
<p>貼心的Sublime Text 2有內建HTML5的snippet，方法如下：   </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">! + <span class="keyword">tab</span></div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">htm<span class="variable">l:5</span> + <span class="keyword">tab</span></div></pre></td></tr></table></figure>

<p>都可以達成HTML5快速生成已經預定的snippet.   </p>
<p><img src="http://i.imgur.com/grLplgD.png" alt=""></p>
<h3 id="三、Multiple_Selection_同時多個游標">三、Multiple Selection 同時多個游標</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">按住<span class="command"><span class="keyword">command</span>+點選你要的位置</span></div></pre></td></tr></table></figure>


<p>推薦用在處理Array等結構重複性高的資料型態。</p>
<h3 id="四、Column_Selection_同時直行游標">四、Column Selection 同時直行游標</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">按住<span class="keyword">option</span>+按著滑鼠左鍵直行往下拖曳選取</div></pre></td></tr></table></figure>


<p>推薦用在處理html等修改固定class或其他部分。</p>
<p><img src="http://i.imgur.com/1kLSh2P.png" alt=""></p>
<h3 id="五、選取引號內字串">五、選取引號內字串</h3>
<p>通常你都怎樣選取雙引號內的字串呢？<code>&quot;string&quot;</code>利用滑鼠從第一個引號拉到後面那個。</p>
<p>輸入：<code>command + d</code> 即可完成</p>
<h3 id="六、分割畫面">六、分割畫面</h3>
<p>有時候我時常左邊放HTML檔，右邊放SCSS檔，一邊看一邊編輯，這時候就要分割畫面。</p>
<p>輸入：<code>command+option+數量</code></p>
<p>就可以把視窗分割成你要的數量。</p>
<h3 id="七、貼上符合縮排">七、貼上符合縮排</h3>
<p>有時候從網站上複製一段code，常常貼上的部份本身就有縮排，貼完卻只有第一行有縮排，其他跑到前面。</p>
<p>複製完後，輸入：<code>shift+command+v</code></p>
<p>也就是在原本的貼上加上shift就可以解決！</p>
<h3 id="reference"><em>reference</em></h3>
<ol>
<li><a href="http://www.youtube.com/watch?v=41nY3RLBy3w&amp;list=PL8dIIwCMF-SOaSb3_VYUlyULpPyk7iwlh&amp;index=1" target="_blank" rel="external">up chen in 2013 JSDC</a></li>
<li><a href="https://gist.github.com/twosixcode/1988097" target="_blank" rel="external">Paste and Indent</a></li>
</ol>
]]></content>
    <category scheme="http://code.kpman.cc/tags/sublime-text-2/" term="sublime text 2"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[2013 JSDC所見聞]]></title>
    <link href="http://code.kpman.cc/2013/05/20/2013-jsdc所見聞/"/>
    <id>http://code.kpman.cc/2013/05/20/2013-jsdc所見聞/</id>
    <published>2013-05-20T02:57:19.000Z</published>
    <updated>2013-05-20T08:32:40.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/02RzVQA.png" alt="JSDC"></p>
<p>這是第二屆的JSDC，由TonyQ及三大社群舉辦的聚會，非常幸運的我能順利的利用社群票的機制搶到票，在眾多非常有經驗的強者面前，聽完他們的分享，越感覺自己對於網頁開發充滿了熱情！</p>
<a id="more"></a>
<blockquote>
<p>『我們不叫前端工程師，以後請叫我們<em>前端設計師</em>！』</p>
</blockquote>
<p>這是聽完今年的JSDC感覺最有趣的一句話了。這句話帶出了他們的幽默風趣，在Web Develope這一個圈子，能結合設計還有程式的，就是前端工程師，也就是所謂的F2E。</p>
<p>雖然對於網頁開發我自己算是沒有什麼經驗，要談設計我也沒有什麼基礎知識，但我知道這條路是我喜歡的，我會繼續走下去。給自己的目標是十年，我希望十年後我能跟現在我敬佩的前輩們一起討論，一起努力。</p>
<h2 id="議程記錄＆見聞">議程記錄＆見聞</h2>
<h3 id="Day1">Day1</h3>
<ul>
<li><p>【AWS】介紹了他們的服務現在已經針對node.js有放出SDK - 有用過的人歡迎一起分享討論。</p>
</li>
<li><p>【<a href="http://www.slideshare.net/WillHuangTW/java-script-jsdc2013" target="_blank" rel="external">保哥</a>】介紹了他的開發經驗，針對code要怎樣去調教，他說了一句話讓我印象深刻：</p>
</li>
</ul>
<blockquote>
<p>通常你的網站會慢，第一個要查的就是你自己所寫的code，不是你套用的那些framework。</p>
</blockquote>
<p>保哥也推薦利用<a href="jsperf.com">jsperf.com</a>去測試自己的code，雖然執行上面的效果一模一樣，有可能只差一個<code>new</code>效率就差了200倍之多。</p>
<ul>
<li>【<a href="https://speakerdeck.com/linyiru/ai-liao-li-wang-zhan-qian-duan-kai-fa-jing-yan-tan" target="_blank" rel="external">Lawrence</a>】同樣待過資種的Lawrence學長介紹了愛料理的開發，主要是一些用過的套件還有經驗談，舉凡Bootstrap、Font Awesome、template利用Handlebars去完成等。利用Crazyegg、GA去分析，也談到了RWD的問題。最後三句話，始終在腦海中揮之不去。</li>
</ul>
<blockquote>
<p>在技術上有卓越表現，是工程師的浪漫。<br>在設計上有卓越表現，是設計師的浪漫。<br>在產品上有卓越表現，是企劃與PM的浪漫。</p>
</blockquote>
<ul>
<li><p>【<a href="https://speakerdeck.com/evenwu/ru-he-jiao-she-ji-shi-qian-duan-ji-shu" target="_blank" rel="external">Even Wu</a>】Even介紹到了如何教前端技術，投影片的風格太有趣XD聊到了教設計師寫code其實要讓他們自動自發的學習，也是一個最重要的觀念：激勵。這個議程談的不是技術，而是一種經驗和體悟。<br>最後剩下的時間，大家交流的問題也很有趣。就有某設計師提到：他原本是設計師，但他每次提出的效果，前端工程師都跟他說這做不出來，他為了證明做的到，便開始自動自發的學習寫code，來向前端工程師證明。   </p>
</li>
<li><p>【<a href="https://speakerdeck.com/wallat/gong-cheng-shi-tao-sheng-huo-gong-ju-jie-shao-zuo-geng-kuai-dian" target="_blank" rel="external">up chen</a>】介紹了很多實用的工具，但可能我自己本身就是一個很偷懶的人，（偷懶的人都會想要去找一些好用的工具讓自己做事更快）所以覺得這一個議程沒有得到很多新知。<br>但像是sublime text 的column selection便是之前沒有在使用，但是覺得對自己很方便的技巧:)</p>
</li>
<li><p>【Rex Huang】這個主題很酷，在瀏覽器上面建立一個os，而且執行起來很順，重點是利用js去打造的，同時也是大會的贊助商，未來應該很有發展，但是對於現階段的我來說比較艱深，所以就沒有很仔細的記錄筆記。</p>
</li>
<li><p>【KKBOX】kkbox來談談利用node.js開發的心得。介紹了一些node的用法還有經驗，但這種議程最難過的就是自己對於node.js接觸還沒有很深，所以聽起來會有點懵懵懂懂，印象最深刻的就是這句話：</p>
</li>
</ul>
<blockquote>
<p>利用JavaScript去寫後台聽起來很酷，但做起來會想要哭。</p>
</blockquote>
<ul>
<li>【Ruben Tan】是一個聲音很好聽的英文場議程。講者提到了flow control問題，要避免寫太多call back才是，single thread一直是node.js開發的問題。</li>
</ul>
<h3 id="Day_2">Day 2</h3>
<p><img src="http://i.imgur.com/8N7fGlU.png" alt="picture from Josephj" title="F2E is Keystone"></p>
<ul>
<li>【<a href="https://speakerdeck.com/josephj/f2e-the-keystone" target="_blank" rel="external">Josephj(啊嗚)</a>】早在JSDC開始前，就在網路上得知該前輩維護的<a href="http://f2eclass.com" target="_blank" rel="external">資源</a>，對於網頁開發，他待過yahoo!，從IE4開始就寫前台了！投影片上面也列出好幾位很值得學習的前輩，真是看的我心花怒放XD<br>前端魂，是身為前端工程師（設計師？）應該有的精神！</li>
</ul>
<blockquote>
<p>前端，你的名字叫熱血</p>
</blockquote>
<p>前輩也提到，技術不是重點，態度才是，避免盲目的追求技術，好的前端不等於知道很多技術。積極分享、多回饋，這點我真的在Josephj身上看到，從他架設的f2eclass就可以知道他願意分享的態度。</p>
<ul>
<li><p>【<a href="http://jsdc.york.tw:3939/" target="_blank" rel="external">york</a>】這是一場非常酷的live demo，台上講者的投影片，透過連線到jsdc.york.tw可以即時的在自己電腦切換，且下方就demo了socket.io的實作。雖然自己還沒有接觸到這一塊，但知道socket.io是利用websocket去做，在沒有實作websocket的瀏覽器，會切換別的通道，讓他們也可以work，所以支援的瀏覽器很廣。</p>
</li>
<li><p>【<a href="https://speakerdeck.com/jaceju/understanding-the-mvc-mvp-mvvm-in-javascript" target="_blank" rel="external">大澤木小鐵</a>】小鐵與我們分享了在JavaScript上面實作MVC、MVP、MVVM（簡稱MV*）的心法，這場我聽的津津有味！利用圖解的方式搭配很多時事梗XD重點是讓沒什麼經驗的我也可以略懂，相信未來在開發JS的時候，會再想到這一份投影片。</p>
</li>
<li><p>【<a href="https://speakerdeck.com/othree/this" target="_blank" rel="external">othree</a>】othree和我們分享了this的用法。在不同情況呼叫this的時候，他針對的function以及目標會不同。然而我覺得這對我來說也還是太深了XD 開發的經驗還是不太足夠，但這一個主題應該是很多有經驗的前輩們都想要討論的問題，期待自己能好好的加強自己，等到我也遇到this的問題，我相信我又更加進步了。</p>
</li>
<li><p>【<a href="http://www.slideshare.net/lis186/20130519-sketching-with-codejsdc2013" target="_blank" rel="external">阿修(Justin Lee)</a>】阿修介紹到了在與設計溝通的時候，其實為了記錄當下討論的結果，利用inline把效果寫進html最快，等到往後要維護的時候，工程師在自己去maintain，著實讓我上了一課。阿修也示範了一套很酷的Titanium，可以即時的在web編輯app程式，然後利用手機即時連線，為了加速效果，也利用了<a href="https://github.com/dbankier/TiShadow" target="_blank" rel="external">Tishaow</a>去built，存檔的同時就可以即時看到，效率非常高。</p>
</li>
<li><p>【Mozilla】介紹了利用Emscripten去把不同的語言編譯成JavaScript，可以在瀏覽器上面運行這樣。</p>
</li>
<li><p>【<a href="http://www.slideshare.net/nowill/rwd-21436569" target="_blank" rel="external">Nowill</a>】Nowill介紹了RWD的一些想法，她是一個非常有經驗的前輩，參與很多專案，與很多公司有很多合作經驗。她說了，RWD不是口頭上說說就是用media query就可以解決的，還有很多技巧是要自己真的去做過才會知道的。提到了五大秘訣：掌握解析度、流動式布局、使用者經驗、體驗操作、推敲思考。且她也提到，不是每一個網站都適合作RWD，因為在需要圖片解析度，文字閱讀的網站，應該針對不同的case去做因應。</p>
</li>
</ul>
<h2 id="心得">心得</h2>
<p>參與了本次的JSDC，我體會到了那些專注於在一件事情上面的美好，那種熱忱，都是在這些前輩們上面可以看到。前端工程師要做的事情，會一點設計，會知道要怎樣寫程式，其實就是將這世界上美的事物，利用web的方式讓大家看的見。<br>我相信分享是這世界上最美好的事情，聽到許多前輩的分享，我自己會有一種想要讓自己變很強的衝動，但有時候會忘記那些最單純的人際關係。在周遭一些朋友身上，我看見了他們很強，很厲害，讓我打從心底佩服；但不知道為什麼，對於他們我會有一種不太想向他們請教的感覺，或許是他們平時透露出來的訊息吧，讓我感覺不是那麼好。<br>我認為交流是一件很愉悅的事情，可以讓彼此在短時間就可以學習到很多，因此我很樂意分享，把自己知道不多但覺得實用的東西給記錄下來，期許大家可以開心的交流，開心的分享，而並非是那種『我知道這個很好用，但你沒有問，你沒有一起來討論，所以我不想告訴你。』提醒自己，要當一個樂意分享的人，在前端開發這一塊，我又重新充滿電了！</p>
<blockquote>
<p>在變強之前，我想要先變好:)</p>
</blockquote>
<h3 id="reference"><em>reference</em></h3>
<ul>
<li><a href="http://hackfoldr.org/#/jsdctw2013/1xcPi6UutDHCKjgoYH4yUJxQ_728E2VO3og1e3Eq0OtE" target="_blank" rel="external">JSDC懶人包</a></li>
<li><a href="https://docs.google.com/spreadsheet/ccc?key=0AqMUl4JFkRfldEVuNDBkNUNsSlZEbDBFXzYzdTloUkE#gid=0" target="_blank" rel="external">JSDC議程 slide整理</a> - 這份很完整</li>
<li><a href="http://f2eclass.com" target="_blank" rel="external">f2eclass</a></li>
<li><a href="http://blog.darkthread.net/" target="_blank" rel="external">黑暗執行緒</a></li>
<li><a href="http://blog.wu-boy.com/" target="_blank" rel="external">小惡魔 apple boy</a></li>
</ul>
]]></content>
    <category scheme="http://code.kpman.cc/tags/JSDC/" term="JSDC"/>
    <category scheme="http://code.kpman.cc/tags/code/" term="code"/>
    <category scheme="http://code.kpman.cc/tags/F2E/" term="F2E"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[建立自己的GitHub Project Pages]]></title>
    <link href="http://code.kpman.cc/2013/05/18/建立自己的github-project-pages/"/>
    <id>http://code.kpman.cc/2013/05/18/建立自己的github-project-pages/</id>
    <published>2013-05-17T16:04:03.000Z</published>
    <updated>2013-05-18T12:10:36.000Z</updated>
    <content type="html"><![CDATA[<p>在GitHub使用上，我算是初新者，有疑問才有進步。每當看到有人把好玩的東西放到GitHub上面變成靜態頁面，都會很想知道他是怎樣辦到的。結果不難，就是利用GitHub Pages來做到。</p>
<a id="more"></a>
<h2 id="GitHub_Pages_介紹">GitHub Pages 介紹</h2>
<p>當你要有一個自己的GitHub Pages，其實分成兩項。   </p>
<ol>
<li>repo的名字為<code>yourname.github.com</code>，則會產生的page路徑為 <code>yourname.github.io</code>。<a href="http://kpman.github.io" target="_blank" rel="external">本部落格</a>是建立在github上面，就是利用這一個GitHub Pages模式去建立，可以參考<a href="http://code.kpman.cc/2013/04/26/hexo%E6%9E%B6blog%E5%88%9D%E9%AB%94%E9%A9%97/" target="_blank" rel="external">hexo架blog初體驗</a>、<a href="http://code.kpman.cc/2013/04/27/%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1blog%E7%9A%84subdomain/" target="_blank" rel="external">建立自己blog的subdomain</a>這兩篇文章。</li>
<li>repo的名字為<code>repo-name</code>，則會產生的page路徑為 <code>yourname.github.io/repo-name</code>，這邊的repo name就不像第一種模式，沒有固定名稱。</li>
</ol>
<h2 id="GitHub_Pages_建立">GitHub Pages 建立</h2>
<p>在每一個新的repo下面，正常的情況都是在mater這一個branch。分享一下我自己的作法。</p>
<ol>
<li><p>GitHub頁面上建立一個新的repo，這邊我取名為first-repo。</p>
<p><img src="http://i.imgur.com/6mFqQlc.png" alt="create new repo" title="new repo"></p>
</li>
<li><p>從本機端clone下來，參照自己的路徑，我的repo則是在command line底下打   </p>
</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">git</span> clone git<span class="variable">@github</span>.com:kpman/first-repo.git</div></pre></td></tr></table></figure>

<ol>
<li>移到該資料夾</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> <span class="keyword">first</span>-repo</div></pre></td></tr></table></figure>

<ol>
<li>將branch移到<code>gh-pages</code>，這步驟很重要，Github Pages就是看這一個branch去決定頁面的。</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="title">git</span> branch gh-pages</div><div class="line">git checkout gh-pages</div></pre></td></tr></table></figure>

<p>或者   </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout --orphan gh-pages <span class="comment">//建立一個沒有parent的branch，並移到該branch上</span></div></pre></td></tr></table></figure>

<ol>
<li>將編輯好的檔案push上去。</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">add</span> .</div><div class="line">git commit</div><div class="line">git <span class="keyword">push</span> origin gh-pages</div></pre></td></tr></table></figure>

<ol>
<li>完成！</li>
</ol>
<h2 id="路徑差異">路徑差異</h2>
<p><a href="http://github.com/kpman/liteAccordion" target="_blank" rel="external">http://github.com/kpman/liteAccordion</a>這樣代表連回GitHub的code頁面<br><a href="http://kpman.github.io/liteAccordion" target="_blank" rel="external">http://kpman.github.io/liteAccordion</a>因為新增到<code>gh-pages</code>這一個branch，所以可以看到靜態的html展示頁面。</p>
<p>其他範例<br><a href="http://jonobr1.github.io/two.js/" target="_blank" rel="external">two.js</a><br><a href="http://jschr.github.io/textillate/" target="_blank" rel="external">textillate</a></p>
<h3 id="reference"><em>reference</em></h3>
<ol>
<li><a href="https://help.github.com/articles/creating-project-pages-manually" target="_blank" rel="external">官方文件</a></li>
<li><a href="http://xlson.com/2010/11/09/getting-started-with-github-pages.html" target="_blank" rel="external">Getting started with GitHub Pages</a></li>
<li><a href="https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches" target="_blank" rel="external">Create a new branch with git and manage branches</a></li>
</ol>
]]></content>
    <category scheme="http://code.kpman.cc/tags/github/" term="github"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[在hexo自訂rss]]></title>
    <link href="http://code.kpman.cc/2013/05/08/在hexo自訂rss/"/>
    <id>http://code.kpman.cc/2013/05/08/在hexo自訂rss/</id>
    <published>2013-05-08T07:50:06.000Z</published>
    <updated>2013-05-08T08:13:40.000Z</updated>
    <content type="html"><![CDATA[<p>趁著好朋友在旁邊的情況下，請教他學會了在hexo自訂rss，再次感受到技術這種東西，真的是當面交流才會發揮他的效益。</p>
<a id="more"></a>
<h3 id="一、本機環境">一、本機環境</h3>
<p>在終端機下輸入以下</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span></div></pre></td></tr></table></figure>

<p>權限沒有取得的記得前面加上<code>sudo</code>。</p>
<h3 id="二、修改_config-yml">二、修改_config.yml</h3>
<p>在主目錄底下的<code>_config.yml</code>檔加上</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plugin<span class="variable">s:</span></div><div class="line">- hexo-generator-feed</div></pre></td></tr></table></figure>

<p><img src="http://i.imgur.com/w39zkK6.png" alt="modify _config.yml" title="modify _config.yml"></p>
<p>如此一來便完成了環境設置。</p>
<h3 id="三、要怎樣找到？">三、要怎樣找到？</h3>
<p>在hexo generate之後，會發現public資料夾底下多了atom.xml<br>在<a href="http://www.feedly.com/" target="_blank" rel="external">feedly</a>這類的閱讀收集器<br>只要輸入<code>domain/atom</code>就可以找到<br>例如要訂閱我的blog只要輸入<code>code.kpman.cc/atom</code>就可以搜尋到囉！</p>
<p><img src="http://i.imgur.com/Hk12y1N.png" alt="rss" title="feedly rss search"></p>
<p>突然發現我的blog只有一個人訂閱，那個人就是我自己…  </p>
<h3 id="reference"><em>reference</em></h3>
<ol>
<li><a href="https://github.com/tommy351/hexo/wiki/Plugins" target="_blank" rel="external">hexo plugins</a></li>
<li><a href="http://michaelhsu.tw/2013/05/05/rssatom-sitemap-for-seo/" target="_blank" rel="external">RSS/Atom、Sitemap for SEO</a></li>
</ol>
<p>感謝強者阿志耐心面授機宜:)</p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/rss/" term="rss"/>
    <category scheme="http://code.kpman.cc/tags/hexo/" term="hexo"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[利用pseudo element 讓html更簡潔]]></title>
    <link href="http://code.kpman.cc/2013/05/07/利用-pseudo-element-讓-html-更簡潔/"/>
    <id>http://code.kpman.cc/2013/05/07/利用-pseudo-element-讓-html-更簡潔/</id>
    <published>2013-05-07T03:28:16.000Z</published>
    <updated>2013-05-07T05:46:25.000Z</updated>
    <content type="html"><![CDATA[<p>趁著記憶猶新的狀況，記錄自己使用偽元素 (pseudo-element)讓原本的html架構更加簡潔的方法。</p>
<a id="more"></a> 
<h2 id="何謂pseudo-element?">何謂pseudo-element?</h2>
<p>不會出現在html的文件裡面，而是利用css讓瀏覽器去實作。以下列出的都是可以使用的pseudo-element。</p>
<ol>
<li>::first-line：若是p元素，則可以用來操作第一行。</li>
<li>::first-letter：用來操作第一個字。</li>
<li>::before：可以在所選元素之前插入樣式/內容。</li>
<li>::after：同<code>before</code>但是是在之後插入。</li>
<li>::selection：用來自定反白後的效果。</li>
</ol>
<blockquote>
<p>為了區分偽元素和偽類，CSS3 的 guildline 將偽元素的寫法修正，以往只要加一個冒號「:」，現在則是加兩個冒號「::」，部分可支援的瀏覽器包含 webkit, firefox, opera。)<br>— by <a href="http://www.mukispace.com/pseudo-elements-10-examples/" target="_blank" rel="external">MUKI</a></p>
</blockquote>
<h2 id="修改過程">修改過程</h2>
<h3 id="原本的html_code">原本的html code</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"icon"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"img/icon01.png"</span> <span class="attribute">alt</span>=<span class="value">"正確觀念"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">span</span>&gt;</span>正確觀念<span class="tag">&lt;/<span class="title">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></div></pre></td></tr></table></figure>

<figure class="highlight"><figcaption><span>scss</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class">.icon</span>{</div><div class="line">	<span class="attribute">display</span><span class="value">: inline-block;</span></div><div class="line">	<span class="attribute">position</span><span class="value">: relative;</span></div><div class="line">	<span class="attribute">padding</span><span class="value">: <span class="number">1em</span>;</span></div><div class="line">	<span class="attribute">padding-top</span><span class="value">: <span class="number">5px</span>;</span></div><div class="line">	<span class="tag">span</span>{</div><div class="line">		<span class="attribute">position</span><span class="value">: absolute;</span></div><div class="line">		<span class="attribute">bottom</span><span class="value">: -<span class="number">7px</span>;</span></div><div class="line">		<span class="attribute">left</span><span class="value">: <span class="number">12px</span>;</span></div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>

<p>原本利用div &gt; span 的效果去把中文字顯現出來，所以在html的架構下，需要多一個<code>span</code>的tag。<br>且利用<code>img</code>去把圖片給show出來。</p>
<h3 id="更改過後的html_code">更改過後的html code</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">data-text</span>=<span class="value">"正確觀念"</span> <span class="attribute">class</span>=<span class="value">"concept_label icon"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span> <span class="comment">&lt;!-- html只剩一行！--&gt;</span></div></pre></td></tr></table></figure>


<figure class="highlight"><figcaption><span>scss</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class">.icon</span>{</div><div class="line">	<span class="attribute">display</span><span class="value">: inline-block;</span></div><div class="line">	<span class="attribute">position</span><span class="value">: relative;</span></div><div class="line">	<span class="attribute">padding</span><span class="value">: <span class="number">1em</span>;</span></div><div class="line">	<span class="attribute">padding-top</span><span class="value">: <span class="number">5px</span>;</span></div><div class="line"></div><div class="line">	&amp;<span class="pseudo">:before</span>{</div><div class="line">		<span class="attribute">position</span><span class="value">: absolute;</span></div><div class="line">		<span class="attribute">bottom</span><span class="value">: -<span class="number">7px</span>;</span></div><div class="line">		<span class="attribute">left</span><span class="value">: <span class="number">12px</span>;</span></div><div class="line">		<span class="attribute">content</span><span class="value">: <span class="function">attr</span>(data-text);</span> &lt;!-- 關鍵作法 --&gt;</div><div class="line">	}</div><div class="line">}</div><div class="line"><span class="class">.concept_label</span>{</div><div class="line">	<span class="attribute">background-image</span><span class="value">: <span class="function">url</span>(../img/icon01_c.png);</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="觀念整理">觀念整理</h3>
<ol>
<li>將中文字放入自訂的<code>data-*</code>屬性</li>
<li>CSS中利用<code>::before</code>取代原本的<code>span</code></li>
<li>利用<code>content: attr(data-text);</code>將date-text文字取出來</li>
<li>將背景圖片利用另外一個class取代，以後維護性提高。</li>
</ol>
<h3 id="reference"><em>reference</em></h3>
<p><a href="http://www.mukispace.com/pseudo-elements-10-examples/" target="_blank" rel="external">那些 CSS 偽元素可以幫你做的 10 個效果</a></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/code/" term="code"/>
    <category scheme="http://code.kpman.cc/tags/css/" term="css"/>
    <category scheme="http://code.kpman.cc/tags/html/" term="html"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[客製化hexo light theme]]></title>
    <link href="http://code.kpman.cc/2013/04/28/客製化hexo-light-theme/"/>
    <id>http://code.kpman.cc/2013/04/28/客製化hexo-light-theme/</id>
    <published>2013-04-28T13:09:37.000Z</published>
    <updated>2013-04-28T14:01:32.000Z</updated>
    <content type="html"><![CDATA[<p>分享一些目前知道的客製化theme技巧。<br>其實非常簡單，但是這些技巧如果沒有問過或是自己看過文件，<br>一時間也無法摸透，所以覺得應該值得把它記錄下來。</p>
<a id="more"></a>
<h3 id="一、增加Disqus留言板">一、增加Disqus留言板</h3>
<ul>
<li>到<a href="http://disqus.com/" target="_blank" rel="external">Disqus</a>申請帳號</li>
<li>右上角的Dashboard <code>+Add</code> 申請一個新的帳號</li>
<li>將網址、name、shortname打好後，要把 <code>shortname</code> 記住！<ul>
<li>修改本機目錄下的 <code>_confid.yml</code></li>
<li>在 <code>disqus_shortname</code> 貼上自己的shortname</li>
</ul>
</li>
</ul>
<p>完成～</p>
<p>※ 後記：<br>若你在申請完disqus貼到自己的blog上面，發現出現很多不必要的連結，請到disqus的dashboard去修改。<br>右上方 <code>Setting</code> -&gt; <code>Discovery</code> -&gt; 將Discovery level拉到最右邊，如下圖<br><img src="http://i.imgur.com/eeEjwka.png" alt="Discovery level"></p>
<h3 id="二、增加右方側欄widget">二、增加右方側欄widget</h3>
<p>在標題就已經破梗囉XD<br>右方出現那些『Tag』『Tag Cloud』等欄位，其實就是修改widget過後得到的結果。<br>方法如下：</p>
<ul>
<li>找到 <code>theme/light/layout/_widget</code> ，可以發現很多 <strong>ejs</strong> 檔</li>
<li>有些是已經自訂好了，例如 <code>category</code> <code>recent_posts</code> 等</li>
<li>在 <code>theme/light/_config.yml</code> 內，修改<strong>widgets</strong>，在底下新增你要的ejs檔名即可～</li>
</ul>
<p>同樣方法可以自己寫ejs檔，一樣在<code>theme/light/_config.yml</code>加上檔名就可以自訂。</p>
<h3 id="三、增加上方自訂全域導覽列">三、增加上方自訂全域導覽列</h3>
<p>預設為Home、Archives這兩個<br>當然得要自訂才爽XD</p>
<p>方法一樣很簡單如下：</p>
<ul>
<li>找到<code>theme/light/_config.yml</code>裡面的第一行</li>
<li>預設狀況應該只有Home&amp;Archives<br> <img src="http://i.imgur.com/reKRQw4.png" alt="menu"></li>
<li>自訂自己的menu，項目後面即為<strong>連結</strong>，可以直接使用<code>http://google.com</code>之類的連結。</li>
</ul>
<h3 id="四、自訂favicon">四、自訂favicon</h3>
<ul>
<li>首先你要有一個favicon.ico檔或是.png檔(這邊預設檔名為<code>favicon.png</code>)</li>
<li>將檔案放在 <code>主目錄/source</code> 底下<br> <img src="http://i.imgur.com/Aar4ap9.png" alt="favicon path"></li>
<li>找到 <code>theme/light/layout/_partial/head.ejs</code>做修改</li>
<li>在裡面加上head.ejs檔內確認有以下這行code即可擁有自己的favicon  </li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link <span class="variable">href=</span><span class="string">"&lt;%- config.root %&gt;favicon.png"</span> <span class="variable">rel=</span><span class="string">"icon"</span>&gt;</div></pre></td></tr></table></figure>

<p>以上介紹一些目前知道的自訂方法，<br>希望還有人可以跟我多介紹一些技巧，一起分享吧！</p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/hexo/" term="hexo"/>
    <category scheme="http://code.kpman.cc/tags/theme/" term="theme"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[建立自己blog的subdomain]]></title>
    <link href="http://code.kpman.cc/2013/04/27/建立自己blog的subdomain/"/>
    <id>http://code.kpman.cc/2013/04/27/建立自己blog的subdomain/</id>
    <published>2013-04-26T16:24:36.000Z</published>
    <updated>2013-04-26T16:28:34.000Z</updated>
    <content type="html"><![CDATA[<p>有鑑於 <code>kpman.github.io</code> 這一個網址實在太難記了，所以就決定將自己有的domain利用subdomain的方式指過來。<br>以下的介紹是我的個案，我利用subdomain而非TLD去做。</p>
<a id="more"></a>
<h2 id="一、擁有自己的domain">一、擁有自己的domain</h2>
<p>雖然像是廢話XD<br>但這邊推薦去<a href="www.godaddy.com/">GoDaddy</a>買domain.<br>方便又快，在更新domain的時間非常快速，理論上一個小時內就可以指到你要的ip位置。</p>
<h2 id="二、到GoDaddy設定subdomain">二、到GoDaddy設定subdomain</h2>
<ol>
<li>進到DNS manager</li>
<li><p>新增一筆CNAME</p>
<p><img src="http://i.imgur.com/esdG2wP.png" alt="CNAME"></p>
</li>
<li><p>GoDaddy部分完成</p>
</li>
</ol>
<h2 id="三、在本機端設置CNAME檔">三、在本機端設置CNAME檔</h2>
<p>這邊要在 <code>主目錄-source</code> 底下放一個檔名為 <code>CNAME</code> 的檔案<br>裡面為你要指向的路徑，這邊我是指向 <code>http://code.kpman.cc</code></p>
<p><img src="http://i.imgur.com/gyMS7U6.png" alt="path"></p>
<p>至於如何設置CNAME檔案，我是利用在github repo上面的create new file</p>
<p><img src="http://i.imgur.com/AHcVLBW.png" alt="create new file"></p>
<p>設置完之後clone下來，然後複製進去<code>主目錄-source</code> 底下XD<br>（有人知道怎樣做比較好嗎？）</p>
<p>理論上這樣子就完成囉！<br>如果有漏掉的麻煩留言給我一起討論:)</p>
<h3 id="reference"><em>reference</em></h3>
<p><a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages" target="_blank" rel="external">官方文件</a></p>
]]></content>
    <category scheme="http://code.kpman.cc/tags/domain/" term="domain"/>
    <category scheme="http://code.kpman.cc/tags/hexo/" term="hexo"/>
    <category scheme="http://code.kpman.cc/tags/subdomain/" term="subdomain"/>
    <category scheme="http://code.kpman.cc/tags/url/" term="url"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[hexo架blog初體驗]]></title>
    <link href="http://code.kpman.cc/2013/04/26/hexo架blog初體驗/"/>
    <id>http://code.kpman.cc/2013/04/26/hexo架blog初體驗/</id>
    <published>2013-04-26T14:21:55.000Z</published>
    <updated>2013-05-20T03:41:25.000Z</updated>
    <content type="html"><![CDATA[<p>是這樣的，一直想要找一個空間，可以清爽的放code，可以跟其他人交流<br>有鑑於系上好朋友們紛紛都建立起自己的部落格，因此我也加入了這個行列。</p>
<p>報著取之於人，回饋之於人的心情，我想要把自己從無到有架設這一個blog的過程記錄下來<br>謝謝那些願意指導我的朋友們！</p>
<a id="more"></a>
<h2 id="一、本機環境設定">一、本機環境設定</h2>
<ol>
<li><p>首先你要有node.js，這是一套快速、簡單且功能強大的 Node.js 網誌框架。</p>
</li>
<li><p>接著你要用 <code>npm install -g hexo</code> 來安裝</p>
</li>
</ol>
<p>理論上這樣就完成了，我個人在裝的時候npm不給裝，發現前面加上 <code>sudo</code> 就可以解決。</p>
<h2 id="二、github帳號設定">二、github帳號設定</h2>
<ol>
<li><p>你要申請一個自己的github帳號</p>
</li>
<li><p>在主頁右上方創建一個新的repo</p>
<p><img src="http://i.imgur.com/6mFqQlc.png" alt="create new repo" title="new repo"></p>
</li>
<li><p>Repository name填入 <code>github帳號.github.com</code> 用來創建github page</p>
</li>
</ol>
<h2 id="三、開始使用hexo">三、開始使用hexo</h2>
<p>建立hexo</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">init</span></div></pre></td></tr></table></figure>

<p>建立一篇文章，將會是<a href="http://markdown.tw" target="_blank" rel="external">Markdown</a>形式，可以到source/_post/title.md去修改</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="string">"title"</span></div></pre></td></tr></table></figure>

<p>生成public檔</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">generate</span></div></pre></td></tr></table></figure>

<p>開啟server觀看（預設在localhost:4000）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">server</span></div></pre></td></tr></table></figure>

<h2 id="四、發佈到github上面">四、發佈到github上面</h2>
<p>修改 <code>_config.yml</code> 檔案，最下面加上</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: github</div><div class="line">  repository: git@<span class="filename">github.com</span>:github帳號/github帳號.<span class="filename">github.com.git</span></div><div class="line">  branch: master</div></pre></td></tr></table></figure>

<p>我那時候用git的時候，沒有ssh認證，如果遇到相同問題可以看<a href="https://help.github.com/articles/generating-ssh-keys" target="_blank" rel="external">這篇</a>。<br>照著上面的指令走就可以完成，唯獨mac裡面似乎內建 <code>id_rsa</code> 這把key，這邊我不清楚XD</p>
<p>接著只要輸入</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">hexo</span> deploy</div></pre></td></tr></table></figure>

<p>等待10分鐘，你的網誌理論上就架好了！網址為 <code>http://github帳號.github.io</code></p>
<h3 id="reference"><em>reference</em></h3>
<ol>
<li><p><a href="http://zespia.tw/hexo/zh-TW/" target="_blank" rel="external">官方文件</a>非常詳盡，重點是<em>中文</em>！  </p>
</li>
<li><p>強者小熊<a href="http://eva0919.github.io/2013/04/21/%E4%BD%BF%E7%94%A8hexo%E4%BB%A5%E5%8F%8Agithub-page%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/" target="_blank" rel="external">教學文</a></p>
</li>
</ol>
]]></content>
    <category scheme="http://code.kpman.cc/tags/code/" term="code"/>
    <category scheme="http://code.kpman.cc/tags/hexo/" term="hexo"/>
    <category scheme="http://code.kpman.cc/tags/github/" term="github"/>
  </entry>
</feed>
